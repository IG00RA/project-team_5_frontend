{"version":3,"file":"static/js/129.579bbf22.chunk.js","mappings":"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","sources":["components/MonthCalendarHead/MonthCalendarHead.styled.jsx","components/MonthCalendarHead/MonthCalendarHead.jsx","components/CalendarTable/CalendarTable.styled.jsx","components/CalendarTable/CalendarTable.jsx","components/ChoosedMonth.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const WeekDaysWrapper = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-gap: 1px;\r\n\r\n  padding: 8px;\r\n  margin-bottom: 14px;\r\n  width: 100%;\r\n\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  \r\n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\r\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\r\n\r\n  @media screen and (min-width: 375px) {\r\n    padding: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 14px;\r\n    margin-bottom: 18px;\r\n  }\r\n`;\r\n\r\nexport const WeekDay = styled.p`\r\n  font-family: Inter;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: calc(18 / 16);\r\n  text-transform: uppercase;\r\n  color: ${props =>\r\n    props.$isWeekendDay\r\n      ? props.theme.colors.calendarPage.todayBg\r\n      : props.theme.colors.calendarPage.iconFocus};\r\n`;\r\n","import moment from 'moment';\r\nimport { WeekDaysWrapper, WeekDay } from './MonthCalendarHead.styled';\r\n\r\nconst MonthCalendarHead = ({ startDay }) => {\r\n  const day = startDay.clone().subtract(1, 'day');\r\n  const daysOfWeek = [...Array(7)].map(() => day.add(1, 'day').clone());\r\n\r\n  const currentWidth = window.innerWidth;\r\n  const viewport =\r\n    currentWidth < 768 ? 'mobile' : currentWidth < 1440 ? 'laptop' : 'desktop';\r\n\r\n  const setFormat = idx => {\r\n    return viewport === 'mobile'\r\n      ? moment()\r\n          .day(idx + 1)\r\n          .format('dd')[0]\r\n      : moment()\r\n          .day(idx + 1)\r\n          .format('ddd');\r\n  };\r\n\r\n  return (\r\n    <WeekDaysWrapper>\r\n      {daysOfWeek.map((dayItem, idx) => (\r\n        <li key={dayItem.unix()}>\r\n          <WeekDay $isWeekendDay={dayItem.day() === 6 || dayItem.day() === 0}>\r\n            {setFormat(idx)}\r\n          </WeekDay>\r\n        </li>\r\n      ))}\r\n    </WeekDaysWrapper>\r\n  );\r\n};\r\n\r\nexport default MonthCalendarHead;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-template-rows: repeat(6, 1fr);\r\n  grid-gap: 1.2px;\r\n\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  text-align: center;\r\n\r\n  min-width: 270px;\r\n  height: 380px;\r\n  width: 100%;\r\n\r\n  background-color: ${props => props.theme.colors.calendarPage.border};\r\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\r\n\r\n  @media screen and (min-width: 375px) {\r\n    min-width: 335px;\r\n    min-height: 470px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    min-width: 704px;\r\n    min-height: 720px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    min-width: 1067px;\r\n    min-height: 625px;\r\n  }\r\n`;\r\n\r\nexport const Cell = styled(Link)`\r\n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n\r\n  transition: box-shadow 250ms linear;\r\n\r\n  &:hover {\r\n    box-shadow: 5px 5px 15px 5px\r\n      ${props => props.theme.colors.calendarPage.hoverCell};\r\n  }\r\n\r\n  overflow: hidden;\r\n  overflow-y: scroll;\r\n  scrollbar-width: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n`;\r\n\r\nexport const RowInCell = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const ShowDay = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 4px;\r\n  margin-right: 2px;\r\n  margin-bottom: 14px;\r\n\r\n  @media screen and (min-width: 375px) {\r\n    margin-top: 8px;\r\n    margin-right: 4px;\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 14px;\r\n    margin-right: 14px;\r\n  }\r\n`;\r\n\r\nexport const Day = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  height: ${p => (p.$isNotCurrentDay ? '22px' : '0')};\r\n  width: ${p => (p.$isNotCurrentDay ? '20px' : '0')};\r\n\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  line-height: calc(14 / 12);\r\n\r\n  color: ${props =>\r\n    props.$isSelectedMonth\r\n      ? props.theme.colors.calendarPage.iconFocus\r\n      : props.theme.colors.calendarPage.notCurrentMonthDate};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: ${p => (p.$isNotCurrentDay ? '26px' : '0')};\r\n    width: ${p => (p.$isNotCurrentDay ? '27px' : '0')};\r\n\r\n    font-size: 16px;\r\n    line-height: calc(18 / 16);\r\n  }\r\n`;\r\n\r\nexport const CurrentDay = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  height: 22px;\r\n  width: 20px;\r\n  padding: 4px 6px;\r\n  border-radius: 6px;\r\n\r\n  background-color: ${props => props.theme.colors.calendarPage.todayBg};\r\n  color: ${props => props.theme.colors.calendarPage.todayText};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 26px;\r\n    width: 27px;\r\n    padding: 4px 8px;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nexport const TasksList = styled.ul`\r\n  margin: 0;\r\n  text-align: center;\r\n  list-style-position: inside;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n`;\r\n\r\nexport const TaskItem = styled.button`\r\n  position: relative;\r\n  margin: 0;\r\n  margin-bottom: 1px;\r\n  padding: 4px 2px 4px 8px;\r\n  width: 100%;\r\n  height: 22px;\r\n\r\n  text-overflow: ellipsis;\r\n  text-align: left;\r\n  font-size: 10px;\r\n  font-weight: 700;\r\n  line-height: calc(14 / 10);\r\n\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  border: none;\r\n  border-radius: 8px;\r\n\r\n  background-color: ${props => {\r\n    switch (props.$priority) {\r\n      case 'high':\r\n        return props.theme.colors.calendarPage.month.hightTaskBg;\r\n      case 'medium':\r\n        return props.theme.colors.calendarPage.month.mediumTaskBg;\r\n      case 'low':\r\n        return props.theme.colors.calendarPage.month.lowTaskBg;\r\n      default:\r\n        return;\r\n    }\r\n  }};\r\n  color: ${props => {\r\n    switch (props.$priority) {\r\n      case 'high':\r\n        return props.theme.colors.calendarPage.month.hightTaskText;\r\n      case 'medium':\r\n        return props.theme.colors.calendarPage.month.mediumTaskText;\r\n      case 'low':\r\n        return props.theme.colors.calendarPage.month.lowTaskText;\r\n      default:\r\n        return;\r\n    }\r\n  }};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 4px 4px 4px 10px;\r\n    font-size: 14px;\r\n    line-height: calc(18 / 14);\r\n    height: 26px;\r\n  }\r\n`;\r\n","import moment from 'moment';\r\n\r\nimport {\r\n  Cell,\r\n  CurrentDay,\r\n  Day,\r\n  Grid,\r\n  RowInCell,\r\n  ShowDay,\r\n  TaskItem,\r\n  TasksList,\r\n} from './CalendarTable.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectTasks } from 'redux/tasks/tasksSelectors';\r\nimport { useEffect } from 'react';\r\nimport { getAllTasks } from 'redux/tasks/tasksOperations';\r\nimport { selectDate } from 'redux/date/selectors';\r\n\r\nconst TOTAL_CELLS = 42;\r\n\r\nconst CalendarTable = ({ startDay }) => {\r\n  const date = useSelector(selectDate);\r\n\r\n  const day = startDay.clone().subtract(1, 'day');\r\n  const dayCellsInCalendar = [...Array(TOTAL_CELLS)]?.map(() =>\r\n    day.add(1, 'day').clone()\r\n  );\r\n\r\n  const isCurrentDay = day => moment().isSame(day, 'day');\r\n  const isSelectedMonth = day => moment(date).isSame(day, 'month');\r\n\r\n  const tasks = useSelector(selectTasks);\r\n\r\n  const setDayTask = dayItem => {\r\n    return tasks\r\n      ?.filter(\r\n        task =>\r\n          task?.date >= dayItem.format('YYYY-MM-DD') &&\r\n          task?.date <= dayItem.clone().endOf('day').format('YYYY-MM-DD')\r\n      )\r\n      .map(task => (\r\n        <li key={task._id}>\r\n          <TaskItem $priority={task.priority}>{task.title}</TaskItem>\r\n        </li>\r\n      ));\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllTasks());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Grid>\r\n      {dayCellsInCalendar?.map(dayItem => (\r\n        <Cell\r\n          key={dayItem.unix()}\r\n          to={`/calendar/day/${dayItem.format('YYYY-MM-DD')}`}\r\n        >\r\n          <RowInCell>\r\n            <ShowDay>\r\n              <Day $isNotCurrentDay $isSelectedMonth={isSelectedMonth(dayItem)}>\r\n                {isCurrentDay(dayItem) ? (\r\n                  <CurrentDay>{dayItem.format('D')}</CurrentDay>\r\n                ) : (\r\n                  dayItem.format('D')\r\n                )}\r\n              </Day>\r\n            </ShowDay>\r\n\r\n            <TasksList>{setDayTask(dayItem)}</TasksList>\r\n          </RowInCell>\r\n        </Cell>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CalendarTable;\r\n","import moment from 'moment';\r\nimport MonthCalendarHead from './MonthCalendarHead/MonthCalendarHead';\r\nimport CalendarTable from './CalendarTable/CalendarTable';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectDate } from 'redux/date/selectors';\r\n\r\nexport default function ChoosedMonth() {\r\n  const date = useSelector(selectDate);\r\n  \r\n  const startDay = moment(date).clone().startOf('month').startOf('week');\r\n  const endDay = moment().endOf('month').endOf('week');\r\n\r\n  const calendar = [];\r\n  const day = startDay.clone();\r\n\r\n  while (!day.isAfter(endDay)) {\r\n    calendar.push(day.clone());\r\n    day.add(1, 'day');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MonthCalendarHead startDay={startDay} />\r\n      <CalendarTable startDay={startDay} />\r\n    </div>\r\n  );\r\n};"],"names":["WeekDaysWrapper","styled","ul","_templateObject","_taggedTemplateLiteral","props","theme","colors","calendarPage","mainBg","border","WeekDay","p","_templateObject2","$isWeekendDay","todayBg","iconFocus","_ref","day","startDay","clone","subtract","daysOfWeek","_toConsumableArray","Array","map","add","currentWidth","window","innerWidth","viewport","setFormat","idx","moment","format","_jsx","children","dayItem","unix","Grid","div","Cell","Link","hoverCell","RowInCell","_templateObject3","ShowDay","_templateObject4","Day","_templateObject5","$isNotCurrentDay","$isSelectedMonth","notCurrentMonthDate","CurrentDay","_templateObject6","todayText","TasksList","_templateObject7","TaskItem","button","_templateObject8","$priority","month","hightTaskBg","mediumTaskBg","lowTaskBg","hightTaskText","mediumTaskText","lowTaskText","_ref2","date","useSelector","selectDate","dayCellsInCalendar","isCurrentDay","isSame","isSelectedMonth","tasks","selectTasks","setDayTask","filter","task","endOf","priority","title","_id","dispatch","useDispatch","useEffect","getAllTasks","to","concat","_jsxs","ChoosedMonth","startOf","endDay","calendar","isAfter","push","MonthCalendarHead","CalendarTable"],"sourceRoot":""}