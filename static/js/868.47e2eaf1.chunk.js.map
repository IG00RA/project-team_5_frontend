{"version":3,"file":"static/js/868.47e2eaf1.chunk.js","mappings":"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","sources":["components/DayCalendarHead/DayCalendarHead.styled.jsx","components/DayCalendarHead/DayCalendarHead.jsx","components/TaskForm/TaskForm.styled.jsx","components/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","components/AddTaskBtn/AddTaskBtn.styled.jsx","components/AddTaskBtn/AddTaskBtn.jsx","components/ColumnHeadBar/ColumnHeadBar.styled.jsx","components/ColumnHeadBar/ColumnHeadBar.jsx","components/TaskToolbar/TaskToolbar.styled.jsx","components/TaskToolbar/TaskToolbar.jsx","components/TaskColumnCard/TaskColumnCard.styled.jsx","components/TaskColumnCard/TaskColumnCard.jsx","components/ColumnTasksList/ColumnTasksList.styled.jsx","components/ColumnTasksList/ColumnTasksList.jsx","components/TasksColumn/TasksColumn.styled.jsx","components/TasksColumn/TasksColumn.jsx","components/TasksColumnsList/TasksColumnsList.styled.jsx","components/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const DayCalendarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  padding: 14px 18px 14px 18px;\n\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 46px 10px 46px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 10px 46px 10px 46px;\n  }\n`;\n\nexport const DayCalendarBtn = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.12;\n\n  text-transform: uppercase;\n\n  color: ${props => props.theme.colors.calendarPage.day.dayName};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n\nexport const NumberDay = styled.div`\n  padding: 4px 6px;\n\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  font-weight: 700;\n\n  border-radius: 8px;\n  color: ${props =>\n    props.$currentday === props.$day\n      ? props.theme.colors.calendarPage.todayText\n      : props.theme.colors.calendarPage.iconFocus};\n  background-color: ${props =>\n    props.$currentday === props.$day &&\n    props.theme.colors.calendarPage.todayBg};\n\n  transition: box-shadow 250ms linear;\n\n  &:hover {\n    box-shadow: 2px 2px 10px 2px\n      ${props => props.theme.colors.calendarPage.hoverCell};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 4px 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  NumberDay,\n  DayCalendarWrapper,\n  DayCalendarBtn,\n} from './DayCalendarHead.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDate } from 'redux/date/selectors';\nimport { updateDate } from 'redux/date/slice';\n\nexport const DayCalendarHead = ({ setMomentDate }) => {\n  const date = useSelector(selectDate);\n  const dispatch = useDispatch();\n\n  const startOfWeek = moment(date).startOf('isoWeek');\n  const daysOfWeek = [...Array(7)].map((_, index) =>\n    moment(startOfWeek).add(index, 'days')\n  );\n\n  const currentWidth = window.innerWidth;\n  const viewport =\n    currentWidth < 768 ? 'mobile' : currentWidth < 1440 ? 'laptop' : 'desktop';\n\n  const handlerDateClick = day => {\n    dispatch(updateDate(day.format('YYYY-MM-DD')));\n    setMomentDate(day);\n  };\n\n  return (\n    <DayCalendarWrapper>\n      {daysOfWeek.map(day => (\n        <DayCalendarBtn\n          onClick={() => handlerDateClick(day)}\n          type=\"button\"\n          key={day}\n        >\n          {viewport === 'mobile' ? day.format('dd')[0] : day.format('ddd')}\n          <NumberDay $currentday={date} $day={day.format('YYYY-MM-DD')}>\n            {day.format('D')}\n          </NumberDay>\n        </DayCalendarBtn>\n      ))}\n    </DayCalendarWrapper>\n  );\n};\n\nDayCalendarHead.propTypes = {\n  setMomentDate: PropTypes.func.isRequired,\n};","import { styled } from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: relative;\n  top: 42px;\n  left: 268px;\n\n  color: ${props => props.theme.colors.modal.task.closeBtn};\n  transform: rotate(-90deg);\n\n  transition:\n    color 250ms linear,\n    transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.button.hoverBg};\n    transform: rotate(90deg);\n  }\n\n  @media (min-width: 768px) {\n    top: 42px;\n    left: 356px;\n  }\n`;\n\nexport const IconClose = styled.svg`\n  height: 24px;\n  width: 24px;\n\n  stroke: currentColor;\n  fill: transparent;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  padding: 40px 18px;\n  width: 303px;\n\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.modal.task.taskFormBorder};\n  background-color: ${props => props.theme.colors.modal.task.taskBG};\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n  @media (min-width: 768px) {\n    gap: 28px;\n\n    padding: 40px 28px;\n    width: 396px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nexport const InputTimeWrapper = styled.div`\n  display: flex;\n  gap: 13px;\n\n  @media (min-width: 375px) {\n    gap: 15px;\n  }\n\n  @media (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.16;\n\n  color: rgba(52, 52, 52, 0.8);\n`;\n\nexport const InputText = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 46px;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n\n  color: ${props => props.theme.colors.modal.task.taskInputText};\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.modal.task.taskInput};\n  border: 1px solid ${props => props.theme.colors.modal.task.popUpBorder};\n  cursor: pointer;\n\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 2px 1px 10px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  &::placeholder {\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.28;\n\n    color: ${props => props.theme.colors.modal.task.taskInputText};\n  }\n`;\n\nexport const InputTime = styled.input`\n  padding: 14px 18px;\n  min-width: 100px;\n  height: 46px;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n\n  color: ${props => props.theme.colors.modal.task.taskInputText};\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.modal.task.taskInput};\n  border: 1px solid ${props => props.theme.colors.modal.task.popUpBorder};\n\n  cursor: pointer;\n\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 2px 1px 10px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  @media (min-width: 375px) {\n    min-width: 126px;\n  }\n\n  @media (min-width: 768px) {\n    min-width: 163px;\n  }\n`;\n\nexport const BottomWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nexport const RadioWrapper = styled.ul`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n\n  font-family: Inter;\n  text-transform: capitalize;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n\n  color: ${props => props.theme.colors.modal.task.taskInputText};\n  cursor: pointer;\n`;\n\nexport const WrapperBtn = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const FormSubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  width: 178px;\n  height: 48px;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n\n  border-radius: 8px;\n  color: ${props => props.theme.colors.modal.task.saveBtnText};\n  background-color: ${props => props.theme.colors.calendarPage.todayBg};\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n\nexport const IconInBtn = styled.svg`\n  height: 18px;\n  width: 18px;\n\n  stroke: ${props => props.theme.colors.modal.task.saveBtnText};\n  fill: transparent;\n`;\n\nexport const CancelBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 144px;\n  height: 48px;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n\n  border-radius: 8px;\n  color: ${props => props.theme.colors.modal.task.cancelBtnText};\n  background-color: ${props => props.theme.colors.modal.task.cancelBtnBg};\n\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n\nexport const RadioNone = styled.input`\n  display: none;\n`;\n\nexport const RadioCustom = styled.span`\n  display: block;\n\n  width: 10px;\n  height: 10px;\n\n  border-radius: 50%;\n\n  background-color: ${p => {\n    switch (p.color) {\n      case 'low':\n        return p.theme.colors.calendarPage.month.lowTaskText;\n      case 'medium':\n        return p.theme.colors.calendarPage.month.mediumTaskText;\n      case 'high':\n        return p.theme.colors.calendarPage.month.hightTaskText;\n      default:\n        return;\n    }\n  }};\n\n  cursor: pointer;\n`;\n\nexport const RadioCustomCheck = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ${RadioNone}:checked + & {\n    width: 14px;\n    height: 14px;\n\n    border-radius: 50%;\n    border: 1px solid;\n    background-color: transparent;\n    border-color: ${p => {\n      switch (p.color) {\n        case 'low':\n          return 'rgba(114, 194, 248, 0.50);';\n        case 'medium':\n          return 'rgba(243, 178, 73, 0.50);';\n        case 'high':\n          return 'rgba(234, 61, 101, 0.50);';\n        default:\n          return;\n      }\n    }};\n  }\n`;\n\nexport const Error = styled.div`\n  font-family: Inter;\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.16;\n\n  color: ${props => props.theme.colors.calendarPage.month.hightTaskBg};\n`;\n","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  BottomWrapper,\n  CancelBtn,\n  CloseBtn,\n  Form,\n  FormSubmitBtn,\n  IconClose,\n  IconInBtn,\n  InputLabel,\n  InputText,\n  InputTime,\n  InputTimeWrapper,\n  InputWrapper,\n  Label,\n  RadioNone,\n  RadioCustomCheck,\n  WrapperBtn,\n  RadioCustom,\n  Error,\n  RadioWrapper,\n} from './TaskForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTask, updateTask } from 'redux/tasks/tasksOperations';\nimport sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { selectDate } from 'redux/date/selectors';\n\nconst Schema = Yup.object({\n  title: Yup.string()\n    .min(3, 'Please enter at least 3 characters')\n    .required('This field is required'),\n  start: Yup.string(),\n  end: Yup.string(),\n  priority: Yup.string().oneOf(['low', 'medium', 'high']).required(),\n});\n\nconst radioButtonsList = ['low', 'medium', 'high'];\n\nexport const TaskForm = ({\n  task: {\n    _id,\n    title = '',\n    start = moment().format('HH:mm'),\n    end = moment().add(1, 'minute').format('HH:mm'),\n    priority = 'low',\n  },\n  closeModal,\n  ColumnTitle,\n}) => {\n  const [checked, setChecked] = useState(priority);\n  const date = useSelector(selectDate);\n  const dispatch = useDispatch();\n  const normalizedStringCategory = ColumnTitle?.split(' ')\n    .join('-')\n    .toLowerCase();\n\n  const formik = useFormik({\n    initialValues: {\n      title,\n      start,\n      end,\n      priority,\n    },\n    validationSchema: Schema,\n    onSubmit: (value, { resetForm }) => {\n      const request = { ...value, category: normalizedStringCategory, date };\n      if (!_id) {\n        dispatch(addTask(request));\n        resetForm();\n        closeModal();\n        return;\n      }\n      dispatch(updateTask({ id: _id, task: value }));\n      resetForm();\n      closeModal();\n      return;\n    },\n  });\n\n  return (\n    <>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <IconClose>\n          <use href={sprite + '#icon-x-close'}></use>\n        </IconClose>\n      </CloseBtn>\n\n      <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n        <InputWrapper>\n          <InputLabel>\n            Title\n            <InputText\n              placeholder=\"Enter text\"\n              type=\"text\"\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n            />\n          </InputLabel>\n          {formik.errors.title && formik.touched.title && (\n            <Error>{formik.errors.title}</Error>\n          )}\n          <InputTimeWrapper>\n            <InputLabel>\n              Start\n              <InputTime\n                type=\"time\"\n                name=\"start\"\n                value={formik.values.start}\n                onChange={formik.handleChange}\n              />\n            </InputLabel>\n            <InputLabel>\n              End\n              <InputTime\n                type=\"time\"\n                name=\"end\"\n                value={formik.values.end}\n                onChange={formik.handleChange}\n              />\n            </InputLabel>\n          </InputTimeWrapper>\n        </InputWrapper>\n\n        <BottomWrapper>\n          <RadioWrapper>\n            {radioButtonsList.map(radio => (\n              <li key={radio}>\n                <Label>\n                  <RadioNone\n                    onClick={() => setChecked(radio)}\n                    checked={radio === checked}\n                    type=\"radio\"\n                    name=\"priority\"\n                    value={radio}\n                    onChange={formik.handleChange}\n                  />\n                  <RadioCustomCheck color={radio}>\n                    <RadioCustom color={radio}></RadioCustom>\n                  </RadioCustomCheck>\n                  {radio}\n                </Label>\n              </li>\n            ))}\n          </RadioWrapper>\n\n          <WrapperBtn>\n            {!_id ? (\n              <FormSubmitBtn type=\"submit\">\n                <IconInBtn>\n                  <use href={sprite + '#icon-plus'}></use>\n                </IconInBtn>{' '}\n                Add\n              </FormSubmitBtn>\n            ) : (\n              <FormSubmitBtn type=\"submit\">\n                <IconInBtn>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </IconInBtn>{' '}\n                Edit\n              </FormSubmitBtn>\n            )}\n            <CancelBtn type=\"button\" onClick={closeModal}>\n              Cancel\n            </CancelBtn>\n          </WrapperBtn>\n        </BottomWrapper>\n      </Form>\n    </>\n  );\n};\n\nTaskForm.propTypes = {\n  ColumnTitle: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  task: PropTypes.shape({\n    _id: PropTypes.string,\n    title: PropTypes.string,\n    start: PropTypes.string,\n    end: PropTypes.string,\n    priority: PropTypes.string,\n  }),\n};","import PropTypes from 'prop-types';\nimport ModalContainer from \"components/Modal/ModalConatiner\";\nimport { TaskForm } from \"components/TaskForm/TaskForm\";\n\nexport const TaskModal = ({ task, isModalOpen, closeModal, ColumnTitle }) => {\n\n  return (\n    <ModalContainer isOpen={isModalOpen} onRequestClose={closeModal} >\n      <TaskForm ColumnTitle={ColumnTitle} task={task} closeModal={closeModal} />\n    </ModalContainer>\n  );\n};\n\nTaskModal.propTypes = {\n  ColumnTitle: PropTypes.string.isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  task: PropTypes.shape(),\n};","import { styled } from 'styled-components';\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n\n  color: ${props => props.theme.colors.calendarPage.day.addTaskBtnText};\n  border-radius: 8px;\n  border: 1px dashed\n    ${props => props.theme.colors.calendarPage.day.addTaskBtnBorder};\n  background-color: ${props =>\n    props.theme.colors.calendarPage.day.addTaskBtnBg};\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 4px 2px 16px 0px ${props => props.theme.colors.button.shadow};\n    background-color: ${props =>\n      props.theme.colors.calendarPage.periodTogglerActiveBg};\n  }\n`;\n\nexport const Icon = styled.svg`\n  display: inline-flex;\n  stroke: currentColor;\n  height: 24px;\n  width: 24px;\n  fill: transparent;\n`;\n","import PropTypes from 'prop-types';\nimport sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport { Btn, Icon } from \"./AddTaskBtn.styled\";\n\nexport const AddTaskBtn = ({openModal}) => {\n  return (\n    <Btn type=\"button\" onClick={openModal}>\n      <Icon>\n        <use href={sprite + '#icon-plus'}></use>\n      </Icon>\n      Add task</Btn>\n  );\n};\n\nAddTaskBtn.propTypes = {\n  openModal: PropTypes.func.isRequired,\n};","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h2`\n  font-family: Inter;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.2;\n\n  color: ${props => props.theme.colors.calendarPage.day.taskCardTitle};\n`;\n\nexport const IconBtn = styled.button`\n  color: ${props => props.theme.colors.calendarPage.day.taskCardTitle};\n\n  transition: color 250ms linear;\n\n  &:hover {\n    color: ${props => props.theme.colors.calendarPage.todayBg};\n  }\n`;\n\nexport const Icon = styled.svg`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 24px;\n  width: 24px;\n\n  stroke: currentColor;\n  fill: transparent;\n`;\n","import PropTypes from 'prop-types';\nimport sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport { Icon, IconBtn, Title, Wrapper } from './ColumnHeadBar.styled';\n\nexport const ColumnHeadBar = ({ ColumnTitle, openModal }) => {\n  return (\n    <Wrapper>\n      <Title>{ColumnTitle}</Title>\n      <IconBtn type=\"button\" onClick={openModal}>\n        <Icon>\n          <use href={sprite + '#icon-icon-plus'}></use>\n        </Icon>\n      </IconBtn>\n    </Wrapper>\n  );\n};\n\nColumnHeadBar.propTypes = {\n  ColumnTitle: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 10px;\n`;\n\n// этот стилизированный компонент тут пустой не случайно, так нужно, не трогать!\nexport const Button = styled.button``;\nexport const Icon = styled.svg`\n  height: 16px;\n  width: 16px;\n\n  stroke: ${props => props.theme.colors.header.titleText};\n  fill: transparent;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${Button}:hover & {\n    stroke: ${props => props.theme.colors.header.accent};\n  }\n`;\n\nexport const WrapperPopUp = styled.div`\n  display: none;\n  padding: 20px 24px;\n\n  border-radius: 8px;\n  background: ${props => props.theme.colors.modal.task.taskBG};\n  border: 1px solid ${props => props.theme.colors.modal.task.popUpBorder};\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n  &:hover {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    gap: 14px;\n    position: absolute;\n    bottom: 8px;\n    right: 68px;\n  }\n`;\n\nexport const CategoryBtn = styled.button`\n  &:hover + ${WrapperPopUp} {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    gap: 14px;\n    position: absolute;\n    bottom: 8px;\n    right: 68px;\n  }\n`;\n\nexport const PopUpBtn = styled.button`\n  width: 100%;\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1, 28;\n\n  color: ${props => props.theme.colors.header.titleText};\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: ${props => props.theme.colors.header.accent};\n  }\n`;\n\nexport const IconPopUp = styled.svg`\n  height: 16px;\n  width: 16px;\n\n  fill: transparent;\n  stroke: currentColor;\n`;\n","import PropTypes from 'prop-types';\nimport sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport {\n  Wrapper,\n  Icon,\n  CategoryBtn,\n  WrapperPopUp,\n  PopUpBtn,\n  Button,\n  IconPopUp,\n} from './TaskToolbar.styled';\nimport { deleteTask, updateTask } from 'redux/tasks/tasksOperations';\n\nconst columnsList = ['To do', 'In progress', 'Done'];\n\nexport const TaskToolbar = ({ openModal, task, ColumnTitle }) => {\n  const buttonsList = columnsList.filter(btn => btn !== ColumnTitle);\n\n  const dispatch = useDispatch();\n\n  const normalizedStringCategory = text => {\n    return text?.split(' ').join('-').toLowerCase();\n  };\n\n  return (\n    <Wrapper>\n      <CategoryBtn type=\"button\">\n        <Icon>\n          <use href={sprite + '#icon-icon-exit'}></use>\n        </Icon>\n      </CategoryBtn>\n\n      <WrapperPopUp>\n        {buttonsList.map(btn => (\n          <PopUpBtn\n            onClick={() =>\n              dispatch(\n                updateTask({\n                  id: task._id,\n                  task: { category: normalizedStringCategory(btn) },\n                })\n              )\n            }\n            key={btn}\n            type=\"button\"\n          >\n            <span>{btn}</span>\n            <IconPopUp>\n              <use href={sprite + '#icon-icon-exit'}></use>\n            </IconPopUp>\n          </PopUpBtn>\n        ))}\n      </WrapperPopUp>\n\n      <Button type=\"button\" onClick={() => openModal(task)}>\n        <Icon>\n          <use href={sprite + '#icon-pencil'}></use>\n        </Icon>\n      </Button>\n      <Button onClick={() => dispatch(deleteTask(task._id))} type=\"button\">\n        <Icon>\n          <use href={sprite + '#icon-trash-box'}></use>\n        </Icon>\n      </Button>\n    </Wrapper>\n  );\n};\n\nTaskToolbar.propTypes = {\n  ColumnTitle: PropTypes.string.isRequired,\n  task: PropTypes.shape().isRequired,\n  openModal: PropTypes.func.isRequired,\n};","import { styled } from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  padding: 14px 18px 18px 14px;\n\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\n  background-color: ${props =>\n    props.theme.colors.calendarPage.day.taskLabelText};\n`;\n\nexport const Title = styled.h3`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.28;\n\n  color: ${props => props.theme.colors.calendarPage.day.taskCardTitle};\n`;\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const UserWrapper = styled.div`\n  display: flex;\n  align-items: end;\n  gap: 8px;\n`;\n\nexport const Img = styled.img`\n  width: 32px;\n  height: 32px;\n\n  border-radius: 32px;\n  border: 1.8px solid\n    ${props => props.theme.colors.calendarPage.day.addTaskBtnBorder};\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 4px 12px 4px 12px;\n\n  border-radius: 4px;\n\n  background-color: ${props => {\n    switch (props.$priority) {\n      case 'high':\n        return props.theme.colors.calendarPage.month.hightTaskText;\n      case 'medium':\n        return props.theme.colors.calendarPage.month.mediumTaskText;\n      case 'low':\n        return props.theme.colors.calendarPage.month.lowTaskText;\n      default:\n        return;\n    }\n  }};\n`;\n\nexport const Text = styled.p`\n  text-transform: capitalize;\n  font-family: Inter;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 1.2;\n\n  color: ${props => props.theme.colors.calendarPage.day.taskLabelText};\n`;\n","import PropTypes from 'prop-types';\nimport { TaskToolbar } from \"components/TaskToolbar/TaskToolbar\";\nimport { Img, Item, ItemWrapper, Text, TextWrapper, Title, UserWrapper } from \"./TaskColumnCard.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"redux/user/selectors\";\n\nexport const TaskColumnCard = ({ task, openModal, ColumnTitle, provided }) => {\n  const image = 'https://as2.ftcdn.net/v2/jpg/03/59/58/91/1000_F_359589186_JDLl8dIWoBNf1iqEkHxhUeeOulx0wOC5.jpg';\n\n  const { avatarURL, userName } = useSelector(selectUser);\n\n  return (\n    <Item {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n      <Title>{task.title}</Title>\n      <ItemWrapper>\n        <UserWrapper>\n          <Img src={avatarURL ? avatarURL : image} alt={userName} />\n          <TextWrapper $priority={task.priority}><Text>{task.priority}</Text></TextWrapper>\n        </UserWrapper>\n        <TaskToolbar openModal={openModal} task={task} ColumnTitle={ColumnTitle} />\n      </ItemWrapper>\n    </Item>\n  );\n};\n\nTaskColumnCard.propTypes = {\n  ColumnTitle: PropTypes.string.isRequired,\n  task: PropTypes.shape().isRequired,\n  openModal: PropTypes.func.isRequired,\n};","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  height: 100%;\n  width: 100%;\n\n  overflow: hidden;\n  overflow-y: scroll;\n  scrollbar-width: 2px;\n  scrol &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n\n  // полоса прокрутки (скроллбар)\n\n  &::-webkit-scrollbar {\n    width: 0.4rem;\n    border: 0.0625rem solid rgba(105, 104, 104, 0.237);\n    background-color: transparent;\n  }\n\n  // ползунок скроллбара\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${props => props.theme.colors.modal.task.taskScroll};\n    border-radius: 0.2rem;\n    border: 1px solid rgba(105, 104, 104, 0.237);\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background-color: ${props => props.theme.colors.modal.task.taskScrollHover};\n  }\n\n  &::-webkit-scrollbar-track {\n    margin-left: 2px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TaskColumnCard } from \"components/TaskColumnCard/TaskColumnCard\";\nimport { List } from \"./ColumnTasksList.styled\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useEffect, useState } from \"react\";\n\nexport const ColumnTasksList = ({ tasksColection, openModal, ColumnTitle }) => {\n  const [dragTasks, setDragTask] = useState(tasksColection);\n\n  useEffect(() => { \n    setDragTask(tasksColection);\n  }, [tasksColection]);\n\n  const handleOnDragEnd = (res) => {\n    if (!res.destination) return;\n    const items = [...dragTasks];\n    const [reorderedTasks] = items.splice(res.source.index, 1);\n    items.splice(res.destination.index, 0, reorderedTasks);\n    setDragTask(items);\n  };\n  \n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <Droppable droppableId='DnD'>\n        {(provided) => (\n          <List {...provided.droppableProps} ref={provided.innerRef}>\n            {dragTasks?.map((task, index) => (\n              <Draggable key={task?._id} draggableId={task?._id} index={index}>\n                {(provided) => (\n                  <TaskColumnCard provided={provided} task={task} openModal={openModal} ColumnTitle={ColumnTitle} />\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </List>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nColumnTasksList.propTypes = {\n  ColumnTitle: PropTypes.string.isRequired,\n  tasksColection: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  openModal: PropTypes.func.isRequired,\n};","import { styled } from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  padding: 20px;\n\n  width: 100%;\n  min-width: 280px;\n\n  min-height: 165px;\n  max-height: 568px;\n  height: 100%;\n\n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\n\n  @media screen and (min-width: 375px) {\n    min-width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 344px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TaskModal } from \"components/TaskModal/TaskModal\";\nimport { AddTaskBtn } from \"../AddTaskBtn/AddTaskBtn\";\nimport { ColumnHeadBar } from \"../ColumnHeadBar/ColumnHeadBar\";\nimport { ColumnTasksList } from \"../ColumnTasksList/ColumnTasksList\";\nimport { Item } from \"./TasksColumn.styled\";\nimport { useState } from \"react\";\n\nexport const TasksColumn = ({ ColumnTitle, tasksColection }) => {\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [task, setTask] = useState(null);\n\n  const openModal = (task = null) => { setIsModalOpen(true); setTask(task) };\n\n  const closeModal = () => { setIsModalOpen(false) };\n\n  return (\n    <>\n      <Item>\n        <ColumnHeadBar ColumnTitle={ColumnTitle} openModal={openModal} />\n        {tasksColection?.length !== 0 && <ColumnTasksList openModal={openModal} tasksColection={tasksColection} ColumnTitle={ColumnTitle} />}\n        <AddTaskBtn openModal={openModal} />\n      </Item>\n      <TaskModal ColumnTitle={ColumnTitle} task={task} isModalOpen={isModalOpen} closeModal={closeModal} />\n    </>\n  );\n};\n\nTasksColumn.propTypes = {\n  ColumnTitle: PropTypes.string.isRequired,\n  tasksColection: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 16px;\n  flex-basis: calc((100% - 16px) / 3);\n  width: 100%;\n\n  margin-top: 16px;\n  padding-bottom: 34px;\n\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n\n  // полоса прокрутки (скроллбар)\n\n  &::-webkit-scrollbar {\n    height: 0.4rem;\n    border: 0.0625rem solid rgba(105, 104, 104, 0.237);\n    background-color: transparent;\n  }\n\n  // ползунок скроллбара\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${props => props.theme.colors.modal.task.taskScroll};\n    border-radius: 0.2rem;\n    border: 1px solid rgba(105, 104, 104, 0.237);\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background-color: ${props => props.theme.colors.modal.task.taskScrollHover};\n  }\n\n  @media (min-width: 768px) {\n    overflow: auto;\n    white-space: nowrap;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TasksColumn } from \"../TasksColumn/TasksColumn\";\nimport { List } from \"./TasksColumnsList.styled\";\n\nconst columnsList = ['To do', 'In progress', 'Done'];\n\nexport const TasksColumnsList = ({ tasks }) => {\n  \n  const getTasksColection = (TasksColumnName) => {\n    const normalizedStringCategory = TasksColumnName.split(' ').join('-').toLowerCase();\n\n    return tasks?.filter(task => task?.category === normalizedStringCategory);\n  };\n\n  return (\n    <List>\n      {columnsList.map(item =>\n        <TasksColumn key={item} ColumnTitle={item} tasksColection={getTasksColection(item)}></TasksColumn>)}\n    </List>\n  );\n};\n\nTasksColumnsList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};","import { useOutletContext } from \"react-router\";\nimport { useParams } from \"react-router\";\nimport { DayCalendarHead } from \"./DayCalendarHead/DayCalendarHead\";\nimport { TasksColumnsList } from \"./TasksColumnsList/TasksColumnsList\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllTasks } from \"redux/tasks/tasksOperations\";\nimport { selectFilteredTasksByDate } from \"redux/tasks/tasksSelectors\";\nimport { updateDate } from \"redux/date/slice\";\nimport moment from \"moment\";\n\nexport default function ChoosedDay() {\n  const { currentDay } = useParams();\n\n  const [setChangePeriod, setMomentDate] = useOutletContext();\n  \n  const dispatch = useDispatch();\n  \n  const filteredTask = useSelector(selectFilteredTasksByDate);\n\n  useEffect(() => {\n    dispatch(getAllTasks());\n    setChangePeriod('day');\n    setMomentDate(moment(currentDay));\n    dispatch(updateDate(currentDay));\n\n    return () => setChangePeriod('month');\n  }, [dispatch, setChangePeriod, setMomentDate, currentDay]);\n\n  return (\n    <div>\n      <DayCalendarHead setMomentDate={setMomentDate} />\n      <TasksColumnsList tasks={filteredTask} />\n    </div>\n  );\n};"],"names":["DayCalendarWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","colors","calendarPage","border","mainBg","DayCalendarBtn","button","_templateObject2","day","dayName","NumberDay","_templateObject3","$currentday","$day","todayText","iconFocus","todayBg","hoverCell","DayCalendarHead","_ref","setMomentDate","date","useSelector","selectDate","dispatch","useDispatch","startOfWeek","moment","startOf","daysOfWeek","_toConsumableArray","Array","map","_","index","add","currentWidth","window","innerWidth","viewport","_jsx","children","_jsxs","onClick","updateDate","format","handlerDateClick","type","CloseBtn","modal","task","closeBtn","hoverBg","IconClose","svg","Form","form","taskFormBorder","taskBG","InputWrapper","_templateObject4","InputTimeWrapper","_templateObject5","InputLabel","label","_templateObject6","InputText","input","_templateObject7","taskInputText","taskInput","popUpBorder","InputTime","_templateObject8","BottomWrapper","_templateObject9","RadioWrapper","ul","_templateObject10","Label","_templateObject11","WrapperBtn","_templateObject12","FormSubmitBtn","_templateObject13","saveBtnText","IconInBtn","_templateObject14","CancelBtn","_templateObject15","cancelBtnText","cancelBtnBg","RadioNone","_templateObject16","RadioCustom","span","_templateObject17","p","color","month","lowTaskText","mediumTaskText","hightTaskText","RadioCustomCheck","_templateObject18","Error","_templateObject19","hightTaskBg","Schema","Yup","title","min","required","start","end","priority","oneOf","radioButtonsList","TaskForm","_ref$task","_id","_ref$task$title","_ref$task$start","_ref$task$end","_ref$task$priority","closeModal","ColumnTitle","_useState","useState","_useState2","_slicedToArray","checked","setChecked","normalizedStringCategory","split","join","toLowerCase","formik","useFormik","initialValues","validationSchema","onSubmit","value","_ref2","resetForm","request","_objectSpread","category","addTask","updateTask","id","_Fragment","href","sprite","autoComplete","handleSubmit","placeholder","name","values","onChange","handleChange","errors","touched","radio","TaskModal","isModalOpen","ModalContainer","isOpen","onRequestClose","Btn","addTaskBtnText","addTaskBtnBorder","addTaskBtnBg","shadow","periodTogglerActiveBg","Icon","AddTaskBtn","openModal","Wrapper","Title","h2","taskCardTitle","IconBtn","ColumnHeadBar","Button","header","titleText","accent","WrapperPopUp","CategoryBtn","PopUpBtn","IconPopUp","columnsList","TaskToolbar","buttonsList","filter","btn","text","deleteTask","Item","li","taskLabelText","h3","ItemWrapper","UserWrapper","Img","img","TextWrapper","$priority","Text","TaskColumnCard","provided","_useSelector","selectUser","avatarURL","userName","draggableProps","dragHandleProps","ref","innerRef","src","alt","List","taskScroll","taskScrollHover","ColumnTasksList","tasksColection","dragTasks","setDragTask","useEffect","DragDropContext","onDragEnd","res","destination","items","_items$splice","splice","source","reorderedTasks","Droppable","droppableId","droppableProps","Draggable","draggableId","TasksColumn","setIsModalOpen","_useState3","_useState4","setTask","arguments","length","undefined","TasksColumnsList","tasks","getTasksColection","TasksColumnName","item","ChoosedDay","currentDay","useParams","_useOutletContext","useOutletContext","_useOutletContext2","setChangePeriod","filteredTask","selectFilteredTasksByDate","getAllTasks"],"sourceRoot":""}