{"version":3,"file":"static/js/129.67cd6667.chunk.js","mappings":"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","sources":["components/MonthCalendarHead/MonthCalendarHead.styled.jsx","components/MonthCalendarHead/MonthCalendarHead.jsx","components/CalendarTable/CalendarTable.styled.jsx","components/CalendarTable/CalendarTable.jsx","components/ChoosedMonth.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WeekDaysWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: 1px;\n\n  padding: 8px;\n  margin-bottom: 14px;\n  width: 100%;\n\n  border-radius: 8px;\n  text-align: center;\n  \n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\n\n  @media screen and (min-width: 375px) {\n    padding: 16px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px;\n    margin-bottom: 18px;\n  }\n`;\n\nexport const WeekDay = styled.p`\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(18 / 16);\n  text-transform: uppercase;\n  color: ${props =>\n    props.$isWeekendDay\n      ? props.theme.colors.calendarPage.todayBg\n      : props.theme.colors.calendarPage.iconFocus};\n`;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { selectDate } from 'redux/date/selectors';\nimport i18next from 'i18next';\nimport { WeekDaysWrapper, WeekDay } from './MonthCalendarHead.styled';\n\nconst MonthCalendarHead = () => {\n  const date = useSelector(selectDate);\n  const [daysOfWeek, setDaysOfWeek] = useState([]);\n  const currentWidth = window.innerWidth;\n  const viewport =\n    currentWidth < 768 ? 'mobile' : currentWidth < 1440 ? 'laptop' : 'desktop';\n\n  const setFormat = idx => {\n    return viewport === 'mobile'\n      ? moment()\n          .day(idx + 1)\n          .format('dd')[0]\n      : moment()\n          .day(idx + 1)\n          .format('ddd');\n  };\n\n  useEffect(() => {\n    const startOfWeek = moment(date).startOf('isoWeek');\n    const updatedDaysOfWeek = [...Array(7)].map((_, index) =>\n      moment(startOfWeek).add(index, 'days')\n    );\n    setDaysOfWeek(updatedDaysOfWeek);\n  }, [date]);\n\n  useEffect(() => {\n    const updateLanguage = () => {\n      const startOfWeek = moment(date).startOf('isoWeek');\n      const updatedDaysOfWeek = [...Array(7)].map((_, index) =>\n        moment(startOfWeek).add(index, 'days')\n      );\n      setDaysOfWeek(updatedDaysOfWeek);\n    };\n\n    i18next.on('languageChanged', updateLanguage);\n    return () => {\n      i18next.off('languageChanged', updateLanguage);\n    };\n  }, [date]);\n\n  return (\n    <WeekDaysWrapper>\n      {daysOfWeek.map((dayItem, idx) => (\n        <li key={dayItem.unix()}>\n          <WeekDay $isWeekendDay={dayItem.day() === 6 || dayItem.day() === 0}>\n            {setFormat(idx)}\n          </WeekDay>\n        </li>\n      ))}\n    </WeekDaysWrapper>\n  );\n};\n\nexport default MonthCalendarHead;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  grid-gap: 1.2px;\n\n  border-radius: 8px;\n  overflow: hidden;\n  text-align: center;\n\n  min-width: 270px;\n  height: 380px;\n  width: 100%;\n\n  background-color: ${props => props.theme.colors.calendarPage.border};\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\n\n  @media screen and (min-width: 375px) {\n    min-width: 335px;\n    min-height: 470px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 704px;\n    min-height: 720px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 1067px;\n    min-height: 625px;\n  }\n`;\n\nexport const Cell = styled(Link)`\n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\n  min-width: 100%;\n  min-height: 100%;\n\n  transition: box-shadow 250ms linear;\n\n  &:hover {\n    box-shadow: 5px 5px 15px 5px\n      ${props =>\n        props.$isSelectedMonth\n          ? props.theme.colors.calendarPage.hoverCell\n          : 'none'};\n\n    cursor: ${props => (props.$isSelectedMonth ? props.pointer : 'none')};\n  }\n\n  overflow: hidden;\n  overflow-y: scroll;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nexport const RowInCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const ShowDay = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 4px;\n  margin-right: 2px;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 8px;\n    margin-right: 4px;\n    margin-bottom: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n    margin-right: 14px;\n  }\n`;\n\nexport const Day = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: ${p => (p.$isNotCurrentDay ? '22px' : '0')};\n  width: ${p => (p.$isNotCurrentDay ? '20px' : '0')};\n\n  font-size: 12px;\n  font-weight: 700;\n  line-height: calc(14 / 12);\n\n  color: ${props =>\n    props.$isSelectedMonth\n      ? props.theme.colors.calendarPage.iconFocus\n      : props.theme.colors.calendarPage.notCurrentMonthDate};\n\n  @media screen and (min-width: 768px) {\n    height: ${p => (p.$isNotCurrentDay ? '26px' : '0')};\n    width: ${p => (p.$isNotCurrentDay ? '27px' : '0')};\n\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n\nexport const CurrentDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 22px;\n  width: 20px;\n  padding: 4px 6px;\n  border-radius: 6px;\n\n  background-color: ${props => props.theme.colors.calendarPage.todayBg};\n  color: ${props => props.theme.colors.calendarPage.todayText};\n\n  @media screen and (min-width: 768px) {\n    height: 26px;\n    width: 27px;\n    padding: 4px 8px;\n    border-radius: 8px;\n  }\n`;\n\nexport const TasksList = styled.ul`\n  margin: 0;\n  text-align: center;\n  list-style-position: inside;\n  padding-left: 2px;\n  padding-right: 2px;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n`;\n\nexport const TaskItem = styled.button`\n  position: relative;\n  margin: 0;\n  margin-bottom: 1px;\n  padding: 4px 2px 4px 8px;\n  width: 100%;\n  height: 22px;\n\n  text-overflow: ellipsis;\n  text-align: left;\n  font-size: 10px;\n  font-weight: 700;\n  line-height: calc(14 / 10);\n\n  overflow: hidden;\n  white-space: nowrap;\n  border: none;\n  border-radius: 8px;\n\n  background-color: ${props => {\n    switch (props.$priority) {\n      case 'high':\n        return props.theme.colors.calendarPage.month.hightTaskBg;\n      case 'medium':\n        return props.theme.colors.calendarPage.month.mediumTaskBg;\n      case 'low':\n        return props.theme.colors.calendarPage.month.lowTaskBg;\n      default:\n        return;\n    }\n  }};\n  color: ${props => {\n    switch (props.$priority) {\n      case 'high':\n        return props.theme.colors.calendarPage.month.hightTaskText;\n      case 'medium':\n        return props.theme.colors.calendarPage.month.mediumTaskText;\n      case 'low':\n        return props.theme.colors.calendarPage.month.lowTaskText;\n      default:\n        return;\n    }\n  }};\n\n  @media screen and (min-width: 768px) {\n    padding: 4px 4px 4px 10px;\n    font-size: 14px;\n    line-height: calc(18 / 14);\n    height: 26px;\n  }\n`;\n","import moment from 'moment';\n\nimport {\n  Cell,\n  CurrentDay,\n  Day,\n  Grid,\n  RowInCell,\n  ShowDay,\n  TaskItem,\n  TasksList,\n} from './CalendarTable.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTasks } from 'redux/tasks/tasksSelectors';\nimport { useEffect } from 'react';\nimport { getAllTasks } from 'redux/tasks/tasksOperations';\nimport { selectDate } from 'redux/date/selectors';\n\nconst TOTAL_CELLS = 42;\n\nconst CalendarTable = ({ startDay }) => {\n  const date = useSelector(selectDate);\n\n  const day = startDay.clone().subtract(1, 'day');\n  const dayCellsInCalendar = [...Array(TOTAL_CELLS)]?.map(() =>\n    day.add(1, 'day').clone()\n  );\n\n  const isCurrentDay = day => moment().isSame(day, 'day');\n  const isSelectedMonth = day => moment(date).isSame(day, 'month');\n\n  const tasks = useSelector(selectTasks);\n\n  const setDayTask = dayItem => {\n    return tasks\n      ?.filter(\n        task =>\n          task?.date >= dayItem.format('YYYY-MM-DD') &&\n          task?.date <= dayItem.clone().endOf('day').format('YYYY-MM-DD')\n      )\n      .map(task => (\n        <li key={task._id}>\n          <TaskItem $priority={task.priority}>{task.title}</TaskItem>\n        </li>\n      ));\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTasks());\n  }, [dispatch]);\n\n  return (\n    <Grid>\n      {dayCellsInCalendar?.map(dayItem => (\n        <Cell\n          key={dayItem.unix()}\n          $isSelectedMonth={isSelectedMonth(dayItem)}\n          to={\n            isSelectedMonth(dayItem)\n              ? `/calendar/day/${dayItem.format('YYYY-MM-DD')}`\n              : ''\n          }\n        >\n          <RowInCell>\n            <ShowDay>\n              <Day $isNotCurrentDay $isSelectedMonth={isSelectedMonth(dayItem)}>\n                {isCurrentDay(dayItem) ? (\n                  <CurrentDay>{dayItem.format('D')}</CurrentDay>\n                ) : (\n                  dayItem.format('D')\n                )}\n              </Day>\n            </ShowDay>\n\n            <TasksList>\n              {isSelectedMonth(dayItem) ? setDayTask(dayItem) : ''}\n            </TasksList>\n          </RowInCell>\n        </Cell>\n      ))}\n    </Grid>\n  );\n};\n\nexport default CalendarTable;\n","import moment from 'moment';\nimport MonthCalendarHead from './MonthCalendarHead/MonthCalendarHead';\nimport CalendarTable from './CalendarTable/CalendarTable';\nimport { useSelector } from 'react-redux';\nimport { selectDate } from 'redux/date/selectors';\n\nexport default function ChoosedMonth() {\n  const date = useSelector(selectDate);\n\n  const startDay = moment(date).clone().startOf('month').startOf('week');\n  const endDay = moment().endOf('month').endOf('week');\n\n  const calendar = [];\n  const day = startDay.clone();\n\n  while (!day.isAfter(endDay)) {\n    calendar.push(day.clone());\n    day.add(1, 'day');\n  }\n\n  return (\n    <div>\n      <MonthCalendarHead />\n      <CalendarTable startDay={startDay} />\n    </div>\n  );\n}\n"],"names":["WeekDaysWrapper","styled","ul","_templateObject","_taggedTemplateLiteral","props","theme","colors","calendarPage","mainBg","border","WeekDay","p","_templateObject2","$isWeekendDay","todayBg","iconFocus","date","useSelector","selectDate","_useState","useState","_useState2","_slicedToArray","daysOfWeek","setDaysOfWeek","currentWidth","window","innerWidth","viewport","setFormat","idx","moment","day","format","useEffect","startOfWeek","startOf","updatedDaysOfWeek","_toConsumableArray","Array","map","_","index","add","updateLanguage","i18next","on","off","_jsx","children","dayItem","unix","Grid","div","Cell","Link","$isSelectedMonth","hoverCell","pointer","RowInCell","_templateObject3","ShowDay","_templateObject4","Day","_templateObject5","$isNotCurrentDay","notCurrentMonthDate","CurrentDay","_templateObject6","todayText","TasksList","_templateObject7","TaskItem","button","_templateObject8","$priority","month","hightTaskBg","mediumTaskBg","lowTaskBg","hightTaskText","mediumTaskText","lowTaskText","_ref","_ref2","startDay","clone","subtract","dayCellsInCalendar","isCurrentDay","isSame","isSelectedMonth","tasks","selectTasks","setDayTask","filter","task","endOf","priority","title","_id","dispatch","useDispatch","getAllTasks","to","concat","_jsxs","ChoosedMonth","endDay","calendar","isAfter","push","MonthCalendarHead","CalendarTable"],"sourceRoot":""}