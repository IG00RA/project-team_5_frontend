{"version":3,"file":"static/js/272.7cda1a3d.chunk.js","mappings":"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","sources":["components/DatePickerComponent/DatePickerComponent.styled.jsx","components/DatePickerComponent/DatePickerComponent.jsx","components/DatePickerUserFormInput/DatePickerUserFormInput.styled.jsx","components/UserForm/UserForm.styled.jsx","schemas/userForm.js","components/Buttons/ChangeProfileButton/ChangeProfileButton.styled.jsx","components/Buttons/ChangeProfileButton/ChangeProfileButton.jsx","components/DatePickerUserFormInput/DatePickerUserFormInput.jsx","components/UserForm/UserForm.jsx","pages/Account/Account.styled.jsx","pages/Account/Account.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    background-color: #3e85f3;\n    border-radius: 16px;\n    font-family: inherit;\n\n    width: 235px;\n\n    @media screen and (min-width: 768px) {\n      width: 373px;\n    }\n  }\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 0.2);\n  }\n\n  .react-datepicker__month-container {\n    width: 100%;\n    padding: 5px 10px;\n\n    @media screen and (min-width: 375px) {\n      padding: 18px 18px;\n    }\n\n    @media screen and (min-width: 768px) {\n      padding: 9px 18px;\n    }\n  }\n\n  .react-datepicker__triangle {\n    display: none;\n  }\n\n  .react-datepicker__header {\n    background-color: #3e85f3;\n    border-color: rgba(255, 255, 255, 0.2);\n  }\n\n  .react-datepicker__current-month {\n    text-align: center;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: calc(20 / 16);\n    color: #fff;\n\n    @media screen and (min-width: 375px) {\n      font-size: 16px;\n      line-height: calc(24 / 20);\n    }\n\n    @media screen and (min-width: 768px) {\n      font-size: 24px;\n      line-height: calc(28 / 24);\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    flex-direction: column;\n    row-gap: 20px;\n    column-gap: 14px;\n    margin: 0;\n    margin-top: 11px;\n  }\n\n  .react-datepicker__day--outside-month {\n    opacity: 0;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 18px;\n    padding-bottom: 9px;\n  }\n\n  .react-datepicker__day-name {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 14px;\n    font-weight: 500;\n    line-height: calc(18 / 14);\n    text-transform: uppercase;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n      line-height: calc(24 / 18);\n    }\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .react-datepicker__day {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    padding: 1px;\n\n    border-radius: 50%;\n\n    font-size: 12px;\n    font-weight: 400;\n    line-height: calc(16 / 12);\n    color: #fff;\n\n    @media screen and (min-width: 375px) {\n      font-size: 14px;\n      line-height: calc(18 / 14);\n    }\n\n    @media screen and (min-width: 768px) {\n      padding: 12px 22px;\n      font-size: 18px;\n      line-height: calc(24 / 18);\n    }\n  }\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 0.4);\n  }\n\n  .react-datepicker__day--selected {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 3px 3px;\n\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 1);\n    color: #3e85f3;\n    outline: #fff;\n\n    @media screen and (min-width: 768px) {\n      padding: 12px 20px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    margin-top: 26px;\n    margin-right: 18px;\n    font-weight: 400;\n    width: 15px;\n    height: 15px;\n    border: none;\n    color: #fff;\n  }\n\n  .react-datepicker__navigation--previous {\n    margin-top: 26px;\n    margin-left: 18px;\n    font-weight: 400;\n    width: 15px;\n    height: 15px;\n    border: none;\n  }\n\n  .react-datepicker-wrapper {\n    width: 100%;\n  }\n\n  .react-datepicker__input-container {\n    cursor: pointer;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { DatePickerWrapper } from './DatePickerComponent.styled';\n\nimport { registerLocale } from 'react-datepicker';\nimport en from 'date-fns/locale/en-GB';\n\nregisterLocale('en', { ...en, options: { weekStartsOn: 1 } });\n\nconst DatePickerComponent = ({ startDate, setStartDate, customInput }) => {\n  const customDayNameOfWeek = () => {\n    const dayNameElements = document.querySelectorAll(\n      '.react-datepicker__day-name'\n    );\n    const dayNames = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n    return dayNameElements.forEach((dayElement, index) => {\n      dayElement.textContent = dayNames[index];\n    });\n  };\n  return (\n    <DatePickerWrapper>\n      <DatePicker\n        dateFormat=\"dd MMMM yyyy\"\n        selected={startDate}\n        onChange={date => {\n          setStartDate(date);\n        }}\n        customInput={customInput}\n        locale=\"en\"\n        weekDayClassName={customDayNameOfWeek}\n      />\n    </DatePickerWrapper>\n  );\n};\n\nexport default DatePickerComponent;\n","import { styled } from 'styled-components';\n\nexport const Period = styled.div`\n  /* text-align: center;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: calc(18 / 14);\n  text-transform: uppercase;\n  border-radius: 8px;\n  padding: 6px 12px;\n  background-color: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  color: #fff; */\n\n  /* @media screen and (min-width: 768px) { */\n  /* padding: 8px 12px;\n    font-size: 16px;\n    line-height: calc(18 / 16); */\n  /* } */\n\n  width: 100%;\n  height: 42px;\n  padding: 12px 14px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.accountPage.border};\n  background-color: ${props => props.theme.colors.accountPage.mainBg};\n\n  color: ${props => props.theme.colors.accountPage.mainText};\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: calc(18 / 14);\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 18px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n","import { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const UserInfoForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n\n  width: 100%;\n  min-height: 653px;\n  padding: 0 18px 40px;\n\n  border-radius: 16px;\n\n  background-color: ${props => props.theme.colors.accountPage.mainBg};\n\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n    min-height: 854px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-wrap: wrap;\n    flex-direction: row;\n    gap: 24px;\n    column-gap: 50px;\n\n    min-height: 752px;\n\n    padding-top: 60px;\n    padding-bottom: 60px;\n    padding-left: calc((100% - 758px) / 2);\n    padding-right: calc((100% - 758px) / 2);\n  }\n`;\n\nexport const UserPreview = styled.div`\n  position: relative;\n  top: -22px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n\n  @media screen and (min-width: 768px) {\n    position: static;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const UserData = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const UserName = styled.p`\n  color: ${props => props.theme.colors.accountPage.mainText};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: calc(18 / 18);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const UserLabel = styled.p`\n  color: ${props => props.theme.colors.accountPage.secondText};\n  font-size: 12px;\n  font-weight: 600;\n  line-height: calc(14 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: calc(18 / 14);\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  overflow: hidden;\n  margin: 0 auto;\n  width: 72px;\n  height: 72px;\n\n  border-radius: 50%;\n\n  @media screen and (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border: 2px solid ${props => props.theme.colors.accountPage.accent};\n  border-radius: 50%;\n`;\n\nexport const AvatarTextContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: ${props => props.theme.colors.accountPage.avatarBg};\n  border: 2px solid ${props => props.theme.colors.accountPage.accent};\n  border-radius: 50%;\n`;\n\nexport const AvatarText = styled.span`\n  font-size: 38px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.accountPage.secondText};\n\n  @media screen and (min-width: 768px) {\n    font-size: 60px;\n  }\n`;\n\nexport const CommonInput = styled.input`\n  width: 100%;\n  height: 42px;\n  padding: 12px 14px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.accountPage.border};\n  background-color: ${props => props.theme.colors.accountPage.mainBg};\n\n  color: ${props => props.theme.colors.accountPage.mainText};\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: calc(18 / 14);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 18px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n\nexport const FileInput = styled.input`\n  opacity: 0;\n  visibility: hidden;\n  position: absolute;\n`;\n\nexport const BirthdayInput = styled.input`\n  opacity: 0;\n  visibility: hidden;\n  position: absolute;\n`;\n\nexport const Label = styled.p`\n  margin-bottom: 8px;\n  color: ${props => props.theme.colors.accountPage.secondText};\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: calc(18 / 14);\n  }\n`;\n\nexport const CommonField = styled.label`\n  position: relative;\n  width: 100%;\n  max-width: 354px;\n`;\n\nexport const AvatarField = styled.label`\n  cursor: pointer;\n  position: relative;\n`;\n\nexport const Icon = styled.svg`\n  stroke: ${props => props.theme.colors.accountPage.icon};\n  fill: transparent;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: absolute;\n  bottom: -4px;\n  right: 15px;\n\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: ${props => props.theme.colors.accountPage.accent};\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const Use = styled.use`\n  height: 8px;\n  width: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -16px;\n  right: 4px;\n  color: #e74a3b;\n  font-size: 11px;\n  line-height: calc(14 / 12);\n\n  @media screen and (min-width: 768px) {\n    bottom: -18px;\n    font-size: 12px;\n  }\n`;\n","import * as Yup from 'yup';\n\nconst isValidFileType = value => value.type.includes('image');\nconst regex =\n  /((\\+38)?\\(?\\d{3}\\)?[\\s.-]?\\d{7}|\\d{3}[\\s.-]\\d{2}[\\s.-]\\d{2}|\\d{3}-\\d{4})/;\n\nexport const validationSchema = Yup.object({\n  avatarURL: Yup.mixed().test(\n    'is-valid-type',\n    'Not a valid image type',\n    value => {\n      if (value?.type) {\n        return isValidFileType(value);\n      }\n      return true;\n    }\n  ),\n  userName: Yup.string().max(16).required(),\n  phone: Yup.string()\n    .matches(regex, 'This is an invalid phone number')\n    .max(20)\n    .min(8),\n  birthday: Yup.date(),\n  skype: Yup.string().max(16),\n  email: Yup.string().email().required(),\n});\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 195px;\n  height: 46px;\n  margin-top: 22px;\n  border-radius: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.colors.button.mainBg};\n  transition:\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.button.hoverBg};\n  }\n\n  &:disabled {\n    background-color: ${props => props.theme.colors.button.bgDisabled};\n    box-shadow: none;\n\n    p {\n      color: ${props => props.theme.colors.button.textDisabled};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.29;\n  color: ${props => props.theme.colors.button.text};\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n\nexport const CastomLoader = styled.div`\n  position: relative;\n  bottom: 20px;\n  transform: scale(0.4);\n`;\n","import { Button, CastomLoader, Text } from './ChangeProfileButton.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst ChangeProfileButton = ({ onClick, isLoading, disabled }) => {\n  return (\n    <Button\n      type=\"submit\"\n      onClick={onClick}\n      disabled={disabled}\n      id=\"changeProfileBtn\"\n    >\n      {isLoading ? (\n        <CastomLoader>\n          <Loader />\n        </CastomLoader>\n      ) : (\n        <Text>Save changes</Text>\n      )}\n    </Button>\n  );\n};\n\nexport default ChangeProfileButton;\n","const { forwardRef } = require('react');\nconst { Period } = require('./DatePickerUserFormInput.styled');\n\nexport const DatePickerUserFormInput = forwardRef(({ value, onClick }, ref) => (\n  <Period onClick={onClick} ref={ref}>\n    {value}\n  </Period>\n));\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validationSchema } from '../../schemas';\nimport {\n  AvatarContainer,\n  AvatarField,\n  AvatarImg,\n  AvatarText,\n  AvatarTextContainer,\n  CommonField,\n  CommonInput,\n  FileInput,\n  UserInfoForm,\n  Label,\n  UserPreview,\n  UserData,\n  UserName,\n  UserLabel,\n  ButtonWrapper,\n  Icon,\n  Use,\n  ErrorText,\n  BirthdayInput,\n} from './UserForm.styled';\nimport { selectIsLoadingUser } from '../../redux/user/selectors';\nimport ChangeProfileButton from '../Buttons/ChangeProfileButton/ChangeProfileButton';\nimport { changeProfile } from 'redux/user/operations';\nimport { selectUser } from 'redux/user/selectors';\nimport sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport DatePickerComponent from 'components/DatePickerComponent/DatePickerComponent';\nimport { DatePickerUserFormInput } from 'components/DatePickerUserFormInput/DatePickerUserFormInput';\n\nexport default function UserForm() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isUser = user.email;\n  const isLoading = useSelector(selectIsLoadingUser);\n\n  const setSubmitButtonActive = () => {\n    const btn = document.querySelector('#changeProfileBtn');\n    btn.disabled = false;\n  };\n\n  const setSubmitButtonDisabled = () => {\n    const btn = document.querySelector('#changeProfileBtn');\n    btn.disabled = true;\n  };\n\n  const makeAvatarURL = values => {\n    return typeof values.avatarURL === 'string' ||\n      values.avatarURL === 'undefined'\n      ? values.avatarURL\n      : URL.createObjectURL(values.avatarURL);\n  };\n\n  const compareWithRedux = (field, value) => {\n    const reduxValue = user[field];\n    return value === reduxValue;\n  };\n\n  const initialValues = {\n    avatarURL: user.avatarURL,\n    userName: user.userName,\n    phone: user.phone,\n    birthday: user.birthday,\n    skype: user.skype,\n    email: user.email,\n  };\n\n  const onSubmit = values => {\n    const inputFields = Object.keys(values);\n\n    const formData = new FormData();\n    inputFields.forEach(field => {\n      const value = values[field];\n      formData.append(field, value);\n    });\n\n    dispatch(changeProfile({ formData, setSubmitButtonDisabled }));\n  };\n\n  return (\n    isUser && (\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ values, setFieldValue, handleSubmit }) => {\n          const currentBirthday = values.birthday\n            ? new Date(values.birthday)\n            : new Date();\n\n          const inputHandler = e => {\n            const { name, value } = e.target;\n            setFieldValue(name, value);\n\n            compareWithRedux(name, value)\n              ? setSubmitButtonDisabled()\n              : setSubmitButtonActive();\n          };\n\n          const fileHandler = e => {\n            const file = e.target.files[0];\n            if (!file) return;\n\n            setFieldValue('avatarURL', file);\n            setSubmitButtonActive();\n          };\n\n          const setStartDate = date => {\n            const formatedDate = date\n              .toLocaleString()\n              .split(',')[0]\n              .split('.')\n              .reverse()\n              .join('-');\n\n            setFieldValue('birthday', formatedDate);\n            compareWithRedux('birthday', formatedDate)\n              ? setSubmitButtonDisabled()\n              : setSubmitButtonActive();\n          };\n\n          return (\n            <UserInfoForm onSubmit={handleSubmit}>\n              <UserPreview>\n                <AvatarField>\n                  {makeAvatarURL(values) ? (\n                    <AvatarContainer>\n                      <AvatarImg\n                        src={makeAvatarURL(values)}\n                        alt=\"User avatar\"\n                      />\n                    </AvatarContainer>\n                  ) : (\n                    <AvatarContainer>\n                      <AvatarTextContainer>\n                        <AvatarText>{values.userName[0]}</AvatarText>\n                      </AvatarTextContainer>\n                    </AvatarContainer>\n                  )}\n\n                  <FileInput\n                    name=\"avatarUrl\"\n                    type=\"file\"\n                    onChange={fileHandler}\n                  />\n\n                  <Icon>\n                    <Use href={`${sprite}#icon-plus`}></Use>\n                  </Icon>\n                </AvatarField>\n\n                <UserData>\n                  <UserName>{values.userName || 'UserName'}</UserName>\n                  <UserLabel>User</UserLabel>\n                </UserData>\n              </UserPreview>\n\n              <CommonField>\n                <Label>User Name</Label>\n                <CommonInput\n                  name=\"userName\"\n                  type=\"text\"\n                  value={values.userName}\n                  placeholder=\"mr Ping\"\n                  onChange={inputHandler}\n                />\n                <ErrorText name=\"userName\" component=\"p\" />\n              </CommonField>\n\n              <CommonField>\n                <Label>Phone</Label>\n                <CommonInput\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={values.phone}\n                  placeholder=\"066-333-33-33\"\n                  onChange={inputHandler}\n                />\n                <ErrorText name=\"phone\" component=\"p\" />\n              </CommonField>\n\n              <CommonField>\n                <Label>Birthday</Label>\n                <DatePickerComponent\n                  startDate={currentBirthday}\n                  setStartDate={setStartDate}\n                  customInput={<DatePickerUserFormInput />}\n                />\n                <BirthdayInput\n                  name=\"birthday\"\n                  type=\"date\"\n                  value={values.birthday}\n                  onChange={inputHandler}\n                />\n              </CommonField>\n\n              <CommonField>\n                <Label>Skype</Label>\n                <CommonInput\n                  name=\"skype\"\n                  type=\"text\"\n                  value={values.skype}\n                  placeholder=\"skype name\"\n                  onChange={inputHandler}\n                />\n                <ErrorText name=\"skype\" component=\"p\" />\n              </CommonField>\n\n              <CommonField>\n                <Label>Email</Label>\n                <CommonInput\n                  name=\"email\"\n                  type=\"text\"\n                  value={values.email}\n                  placeholder=\"mrPing@panda.kungfu\"\n                  onChange={inputHandler}\n                />\n                <ErrorText name=\"email\" component=\"p\" />\n              </CommonField>\n\n              <ButtonWrapper>\n                <ChangeProfileButton isLoading={isLoading} disabled={true} />\n              </ButtonWrapper>\n            </UserInfoForm>\n          );\n        }}\n      </Formik>\n    )\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 0;\n  }\n`;\n","import UserForm from '../../components/UserForm/UserForm';\nimport { Wrapper } from './Account.styled';\n\nexport default function Account() {\n  return (\n    <Wrapper>\n      <UserForm />\n    </Wrapper>\n  );\n}\n"],"names":["DatePickerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","registerLocale","_objectSpread","en","options","weekStartsOn","_ref","startDate","setStartDate","customInput","_jsx","children","DatePicker","dateFormat","selected","onChange","date","locale","weekDayClassName","dayNameElements","document","querySelectorAll","dayNames","forEach","dayElement","index","textContent","Period","props","theme","colors","accountPage","border","mainBg","mainText","UserInfoForm","form","UserPreview","_templateObject2","UserData","_templateObject3","UserName","p","_templateObject4","UserLabel","_templateObject5","secondText","AvatarContainer","_templateObject6","AvatarImg","img","_templateObject7","accent","AvatarTextContainer","_templateObject8","avatarBg","AvatarText","span","_templateObject9","CommonInput","input","_templateObject10","FileInput","_templateObject11","BirthdayInput","_templateObject12","Label","_templateObject13","CommonField","label","_templateObject14","AvatarField","_templateObject15","Icon","svg","_templateObject16","icon","Use","use","_templateObject17","ButtonWrapper","_templateObject18","ErrorText","ErrorMessage","_templateObject19","validationSchema","Yup","avatarURL","test","value","type","includes","isValidFileType","userName","max","required","phone","matches","min","birthday","skype","email","Button","button","hoverBg","bgDisabled","textDisabled","Text","text","CastomLoader","onClick","isLoading","disabled","id","Loader","forwardRef","require","DatePickerUserFormInput","ref","UserForm","dispatch","useDispatch","user","useSelector","selectUser","isUser","selectIsLoadingUser","setSubmitButtonActive","querySelector","setSubmitButtonDisabled","makeAvatarURL","values","URL","createObjectURL","compareWithRedux","field","initialValues","Formik","onSubmit","inputFields","Object","keys","formData","FormData","append","changeProfile","setFieldValue","handleSubmit","currentBirthday","Date","inputHandler","e","_e$target","target","name","_jsxs","src","alt","file","files","href","concat","sprite","placeholder","component","DatePickerComponent","formatedDate","toLocaleString","split","reverse","join","ChangeProfileButton","Wrapper","Account"],"sourceRoot":""}