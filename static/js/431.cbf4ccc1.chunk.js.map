{"version":3,"file":"static/js/431.cbf4ccc1.chunk.js","mappings":"6NAEaA,E,QAAoBC,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,o0G,mBCK3CC,EAAAA,EAAAA,gBAAe,MAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOC,EAAAA,GAAE,IAAEC,QAAS,CAAEC,aAAc,MAEvD,IA2BA,EA3B4B,SAAHC,GAAkD,IAA5CC,EAASD,EAATC,UAAWC,EAAYF,EAAZE,aAAcC,EAAWH,EAAXG,YAWtD,OACEC,EAAAA,EAAAA,KAACd,EAAiB,CAAAe,UAChBD,EAAAA,EAAAA,KAACE,IAAU,CACTC,WAAW,eACXC,SAAUP,EACVQ,SAAU,SAAAC,GACRR,EAAaQ,EACf,EACAP,YAAaA,EACbQ,OAAO,KACPC,iBApBsB,WAC1B,IAAMC,EAAkBC,SAASC,iBAC/B,+BAEIC,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEhD,OAAsB,OAAfH,QAAe,IAAfA,OAAe,EAAfA,EAAiBI,SAAQ,SAACC,EAAYC,GAC3CD,EAAWE,YAAcJ,EAASG,EACpC,GACF,KAeF,C,kFChCaE,E,QAAS9B,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mb,6NCYjB,SAAS4B,EAAetB,GAGnC,IAFFuB,EAAmBvB,EAAnBuB,oBACAC,EAAoBxB,EAApBwB,qBAEMC,EAAmC,OAAnBF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBG,OAErCC,EAAsC,OAApBH,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBE,OAExCE,GACgB,OAAnBL,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBM,QAAO,SAAAC,GAAI,MAAuB,WAAf,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAoB,IAAEL,QAC/DD,EACF,IAEIO,GACgB,OAAnBT,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBM,QAAO,SAAAC,GAAI,MAAuB,iBAAf,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAA0B,IAClEL,QACDD,EACF,IAEIQ,GACgB,OAAnBV,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBM,QAAO,SAAAC,GAAI,MAAuB,UAAf,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAmB,IAAEL,QAC9DD,EACF,IAEIS,GACiB,OAApBV,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBK,QAAO,SAAAC,GAAI,MAAuB,WAAf,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAoB,IAAEL,QAChEC,EACF,IAEIQ,GACiB,OAApBX,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBK,QAAO,SAAAC,GAAI,MAAuB,iBAAf,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAA0B,IACnEL,QACDC,EACF,IAEIS,GACiB,OAApBZ,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBK,QAAO,SAAAC,GAAI,MAAuB,UAAf,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAmB,IAAEL,QAC/DC,EACF,IACIU,EACJC,KAAKC,IAAIX,EAAkBI,EAAwBC,GACjD,KAAO,EAELO,EACJF,KAAKC,IAAIL,EAAoBC,EAA0BC,GACrD,KAAO,EAELK,GAAOC,EAAAA,EAAAA,UACX,iBAAM,CACJ,CACEC,KAAM,QACNC,MAAON,KAAKO,KAAKjB,GACjBkB,QAASR,KAAKO,KAAKX,IAErB,CACES,KAAM,cACNC,MAAON,KAAKO,KAAKb,GACjBc,QAASR,KAAKO,KAAKV,IAErB,CACEQ,KAAM,OACNC,MAAON,KAAKO,KAAKZ,GACjBa,QAASR,KAAKO,KAAKT,IAEtB,GACD,CACEF,EACAC,EACAC,EACAR,EACAI,EACAC,IAKEc,EAAwB,WADhBC,EAAAA,EAAAA,IAAYC,EAAAA,IACcC,EAAAA,GAAaC,EAAAA,GAE/CC,EAAS,CACbrB,SAAUgB,EAAYK,OAAOC,eAAeC,SAC5CC,KAAMR,EAAYK,OAAOC,eAAeG,WAGpCC,EAAQ,CACZC,OAAQ,CACNC,IAAK,EACLC,iBAAkB,GAClBC,cAAe,GACfC,WAAY,KACZC,gBAAiB,KACjBC,QAAS,IAEXC,OAAQ,CACNN,IAAK,GACLC,iBAAkB,GAClBC,cAAe,GACfC,WAAY,IACZC,gBAAiB,KACjBC,QAAS,IAEXE,QAAS,CACPP,IAAK,GACLC,iBAAkB,GAClBC,cAAe,GACfC,WAAY,IACZC,gBAAiB,KACjBC,QAAS,KAIPG,EAAeC,OAAOC,WACtBC,EACJH,EAAe,IAAM,SAAWA,EAAe,KAAO,SAAW,UAI7DI,EAAkB,SAAAC,GAAK,OAAMA,EAAU,GAAAC,OAAMD,EAAK,KAAb,EAAgB,EAE3D,OACEpE,EAAAA,EAAAA,KAAAsE,EAAAA,SAAA,CAAArE,UACED,EAAAA,EAAAA,KAACuE,EAAAA,EAAmB,CAACC,MAAM,OAAOC,UAAW,IAAIxE,UAC/CyE,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CACPtC,KAAMA,EACNuC,OAAQvB,EAAMa,GAAUX,IACxBsB,OAAQ,CACNC,IAAK,IACL7E,SAAA,EAEFyE,EAAAA,EAAAA,MAAA,QAAAzE,SAAA,EACEyE,EAAAA,EAAAA,MAAA,kBACEK,GAAG,2BACHC,GAAG,UACHC,GAAG,MACHC,GAAG,UACHC,GAAG,IACHC,cAAc,iBAAgBnF,SAAA,EAE9BD,EAAAA,EAAAA,KAAA,QAAMqF,UAAU,aAChBrF,EAAAA,EAAAA,KAAA,QACEsF,OAAQrD,EACRoD,UAAU,UACVE,YAAY,YAGhBb,EAAAA,EAAAA,MAAA,kBACEK,GAAG,2BACHC,GAAG,UACHC,GAAG,MACHC,GAAG,UACHC,GAAG,IACHC,cAAc,iBAAgBnF,SAAA,EAE9BD,EAAAA,EAAAA,KAAA,QAAMqF,UAAU,aAChBrF,EAAAA,EAAAA,KAAA,QACEsF,OAAQlD,EACRiD,UAAU,UACVE,YAAY,eAIlBvF,EAAAA,EAAAA,KAACwF,EAAAA,EAAa,CAACC,OAAQzC,EAAOG,KAAMuC,UAAU,KAC9C1F,EAAAA,EAAAA,KAAC2F,EAAAA,EAAK,CACJC,SAAU,CAAEH,OAAQ,eACpBI,QAAQ,OACRC,UAAU,EACVL,OAAO,cACPM,KAAM,SAAAC,GAAK,OACThG,EAAAA,EAAAA,KAAA,QACEiG,EAAGD,EAAMC,EACTC,EAAGF,EAAME,EACTC,GAAI,GACJC,WAAW,SACXC,KAAMrD,EAAOrB,SACb2E,WAAW,QACXC,SAAUlD,EAAMa,GAAUV,iBAC1BgD,WAAY,IACZC,MAAO,CAAE/C,WAAYL,EAAMa,GAAUR,YAAazD,SAEjD+F,EAAMU,QAAQtC,OACV,KAGXpE,EAAAA,EAAAA,KAAC2G,EAAAA,EAAK,CACJC,UAAW,EACXC,MAtEU,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAuE9BjB,SAAU,CAAEH,OAAQ,eACpBK,SAAU,CAAEL,OAAQ,eACpBqB,SAAU,GACVf,KAAM,SAAAC,GAAK,OACThG,EAAAA,EAAAA,KAAA,QACEiG,EAAGD,EAAMC,EACTC,EAAGF,EAAME,EACTC,GAAI,EACJY,IAAK,GACLX,WAAW,SACXC,KAAMrD,EAAOrB,SACb2E,WAAW,QACXC,SAAU,GACVC,WAAY,IACZC,MAAO,CAAE/C,WAAY,KAAMzD,SAE1B+F,EAAMU,QAAQtC,OACV,KAGXpE,EAAAA,EAAAA,KAACgH,EAAAA,EAAG,CACFnB,QAAQ,QACRQ,KAAK,iCACLY,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBrD,QAASP,EAAMa,GAAUN,QAAQ3D,UAEjCD,EAAAA,EAAAA,KAACkH,EAAAA,EAAS,CACRrB,QAAQ,QACRsB,SAAS,MACTb,WAAW,UACXD,KAAMrD,EAAOrB,SACb4E,SAAUlD,EAAMa,GAAUT,cAC1B+C,WAAY,IACZY,UAAWjD,EACXsC,MAAO,CAAE/C,WAAYL,EAAMa,GAAUP,sBAGzC3D,EAAAA,EAAAA,KAACgH,EAAAA,EAAG,CACFnB,QAAQ,UACRQ,KAAK,iCACLzC,QAASP,EAAMa,GAAUN,QACzBqD,OAAQ,CAAC,EAAG,EAAG,EAAG,GAAGhH,UAErBD,EAAAA,EAAAA,KAACkH,EAAAA,EAAS,CACRrB,QAAQ,UACRsB,SAAU,MACVd,KAAMrD,EAAOrB,SACb2E,WAAW,UACXC,SAAUlD,EAAMa,GAAUT,cAC1B+C,WAAY,IACZY,UAAWjD,EACXsC,MAAO,CAAE/C,WAAYL,EAAMa,GAAUP,2BAOnD,C,gDCjQQ0D,EAAeC,EAAQ,MAAvBD,WACApG,EAAWqG,EAAQ,MAAnBrG,OAEKsG,EAA4BF,GACvC,SAAAzH,EAAqB4H,GAAG,IAArBpD,EAAKxE,EAALwE,MAAOqD,EAAO7H,EAAP6H,QAAO,OACfzH,EAAAA,EAAAA,KAACiB,EAAM,CAACwG,QAASA,EAASD,IAAKA,EAAIvH,SAChCmE,GACM,I,mBCLAsD,EAAUvI,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8SAGV,SAAAqI,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,CAAC,IAOpB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,MAAME,CAAC,IAO9BC,EAAmB7I,EAAAA,GAAOC,IAAG6I,IAAAA,GAAA3I,EAAAA,EAAAA,GAAA,yLAMnB,SAAAqI,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,CAAC,IAM9BI,EAAO/I,EAAAA,GAAOC,IAAG+I,IAAAA,GAAA7I,EAAAA,EAAAA,GAAA,kEAMjB8I,EAAWjJ,EAAAA,GAAOkJ,GAAEC,IAAAA,GAAAhJ,EAAAA,EAAAA,GAAA,iEAMpBiJ,EAAgBpJ,EAAAA,GAAOC,IAAGoJ,IAAAA,GAAAlJ,EAAAA,EAAAA,GAAA,0FAIjB,SAAA0G,GAAK,OAAIA,EAAMyC,KAAK,IAG7BC,EAAevJ,EAAAA,GAAOwI,EAACgB,IAAAA,GAAArJ,EAAAA,EAAAA,GAAA,iMACzB,SAAA0G,GACP,OAAOA,EAAM4B,MAAM5E,OAAOC,eAAeC,QAC3C,IAMqB,SAAAyE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,CAAC,IAM9Bc,EAAczJ,EAAAA,GAAOC,IAAGyJ,IAAAA,GAAAvJ,EAAAA,EAAAA,GAAA,4BAIxBwJ,EAAO3J,EAAAA,GAAO4J,IAAGC,IAAAA,GAAA1J,EAAAA,EAAAA,GAAA,yLAKlB,SAAA0G,GAAK,OAAIA,EAAM4B,MAAM5E,OAAOC,eAAegG,SAAS,IAKnDC,EAAe/J,EAAAA,GAAOgK,OAAMC,IAAAA,GAAA9J,EAAAA,EAAAA,GAAA,2YAQtB,SAAAqI,GAAC,OAAKA,EAAE0B,WAAa,kBAAoB,iBAAiB,IACvD,SAAArD,GAAK,OAAIA,EAAM4B,MAAM5E,OAAOC,eAAeqG,WAAW,IAGzC,SAAAtD,GAAK,OAAIA,EAAM4B,MAAM5E,OAAOmG,OAAOI,MAAM,GACtET,GACU,SAAA9C,GAAK,OAAIA,EAAM4B,MAAM5E,OAAOC,eAAeuG,SAAS,I,6BC1ErD,SAASC,EAAkB7J,GAAqC,IAAlC8J,EAAY9J,EAAZ8J,aAAcC,EAAe/J,EAAf+J,gBASzD,OACEjF,EAAAA,EAAAA,MAACgD,EAAO,CAAAzH,SAAA,EACNyE,EAAAA,EAAAA,MAACsD,EAAgB,CAAA/H,SAAA,EACfD,EAAAA,EAAAA,KAAC4J,EAAAA,EAAmB,CAClB/J,WAAWgK,EAAAA,EAAAA,SAASH,GACpB5J,aAAc,SAAAQ,GAAI,OAAIqJ,EAAgBG,IAAOxJ,GAAM,EACnDP,aAAaC,EAAAA,EAAAA,KAACuH,EAAyB,OAGzC7C,EAAAA,EAAAA,MAACkE,EAAW,CAAA3I,SAAA,EACVD,EAAAA,EAAAA,KAACkJ,EAAY,CAACzB,QAlBF,WAClBkC,GAAgB,SAAAI,GAAI,OAAIA,EAAKC,QAAQC,SAAS,EAAG,MAAM,GACzD,EAgB4CZ,YAAU,EAAApJ,UAC5CD,EAAAA,EAAAA,KAAC8I,EAAI,CAAA7I,UACHD,EAAAA,EAAAA,KAAA,OAAKkK,KAAMC,EAAAA,EAAS,4BAGxBnK,EAAAA,EAAAA,KAACkJ,EAAY,CAACzB,QAnBF,WAClBkC,GAAgB,SAAAI,GAAI,OAAIA,EAAKC,QAAQI,IAAI,EAAG,MAAM,GACpD,EAiB2CnK,UACjCD,EAAAA,EAAAA,KAAC8I,EAAI,CAAA7I,UACHD,EAAAA,EAAAA,KAAA,OAAKkK,KAAMC,EAAAA,EAAS,mCAK5BzF,EAAAA,EAAAA,MAACwD,EAAI,CAAAjI,SAAA,EACHyE,EAAAA,EAAAA,MAAC0D,EAAQ,CAAAnI,SAAA,EACPD,EAAAA,EAAAA,KAACuI,EAAa,CAACE,MAAM,aACrBzI,EAAAA,EAAAA,KAAC0I,EAAY,CAACpC,WAAW,QAAOrG,SAAC,eAEnCyE,EAAAA,EAAAA,MAAC0D,EAAQ,CAAAnI,SAAA,EACPD,EAAAA,EAAAA,KAACuI,EAAa,CAACE,MAAM,eACrBzI,EAAAA,EAAAA,KAAC0I,EAAY,CAACpC,WAAW,UAASrG,SAAC,qBAK7C,CC5DO,IAAMoK,EAAoBlL,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qUAK3B,SAAA0G,GAAK,OAAIA,EAAM4B,MAAM5E,OAAOC,eAAeqH,MAAM,IAC1C,SAAA3C,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,CAAC,IAKpB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,MAAME,CAAC,IAM9BwC,EAAepL,EAAAA,GAAOC,IAAG6I,IAAAA,GAAA3I,EAAAA,EAAAA,GAAA,0RAKhC,SAAA0G,GAAK,OAAIA,EAAM4B,MAAM5E,OAAOC,eAAeuH,gBAAgB,IAE1C,SAAA7C,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,CAAC,IAIpB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,MAAME,CAAC,IAM9B0C,EAAOtL,EAAAA,GAAOwI,EAACQ,IAAAA,GAAA7I,EAAAA,EAAAA,GAAA,4MAMjB,SAAA0G,GAAK,OAAIA,EAAM4B,MAAM5E,OAAOC,eAAeC,QAAQ,IACvC,SAAAyE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,CAAC,IC9B5B,SAAS4C,KACtB,IAAMC,GAAQ/H,EAAAA,EAAAA,IAAYgI,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwCC,EAAAA,EAAAA,UAASlB,OAASmB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDrB,EAAYuB,EAAA,GAAEtB,EAAesB,EAAA,GAE9BE,EAAqBzB,EAAa0B,OAAO,cAEzCjK,GAAsBkK,EAAAA,EAAAA,IAC1BV,EACAQ,GAGI/J,GAAuBkK,EAAAA,EAAAA,IAC3BX,EACAQ,GAOF,OAJAI,EAAAA,EAAAA,YAAU,WACRV,GAASW,EAAAA,EAAAA,MACX,GAAG,CAACX,EAAUnB,KAGZhF,EAAAA,EAAAA,MAAC2F,EAAiB,CAAApK,SAAA,EAChBD,EAAAA,EAAAA,KAACyJ,EAAkB,CACjBC,aAAcyB,EACdxB,gBAAiBA,KAEnBjF,EAAAA,EAAAA,MAAC6F,EAAY,CAAAtK,SAAA,EACXD,EAAAA,EAAAA,KAACyK,EAAI,CAAAxK,SAAC,WACND,EAAAA,EAAAA,KAACkB,EAAe,CACdC,oBAAqBA,EACrBC,qBAAsBA,SAKhC,C","sources":["components/DatePickerComponent/DatePickerComponent.styled.jsx","components/DatePickerComponent/DatePickerComponent.jsx","components/DatePickerStatisticsInput/DatePickerStatisticsInput.styled.jsx","components/StatisticsChart/StatisticsChart.jsx","components/DatePickerStatisticsInput/DatePickerStatisticsInput.jsx","components/StatisticPaginator/StatisticPaginator.styled.jsx","components/StatisticPaginator/StatisticPaginator.jsx","pages/Statistics/Statistics.styled.jsx","pages/Statistics/Statistics.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    background-color: #3e85f3;\n    border-radius: 16px;\n    font-family: inherit;\n\n    width: 235px;\n\n    @media screen and (min-width: 768px) {\n      width: 373px;\n    }\n  }\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 0.2);\n  }\n\n  .react-datepicker__month-container {\n    width: 100%;\n    padding: 5px 10px;\n\n    @media screen and (min-width: 375px) {\n      padding: 18px 18px;\n    }\n\n    @media screen and (min-width: 768px) {\n      padding: 9px 18px;\n    }\n  }\n\n  .react-datepicker__triangle {\n    display: none;\n  }\n\n  .react-datepicker__header {\n    background-color: #3e85f3;\n    border-color: rgba(255, 255, 255, 0.2);\n  }\n\n  .react-datepicker__current-month {\n    text-align: center;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: calc(20 / 16);\n    color: #fff;\n\n    @media screen and (min-width: 375px) {\n      font-size: 16px;\n      line-height: calc(24 / 20);\n    }\n\n    @media screen and (min-width: 768px) {\n      font-size: 24px;\n      line-height: calc(28 / 24);\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    flex-direction: column;\n    row-gap: 20px;\n    column-gap: 14px;\n    margin: 0;\n    margin-top: 11px;\n  }\n\n  .react-datepicker__day--outside-month {\n    opacity: 0;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 18px;\n    padding-bottom: 9px;\n  }\n\n  .react-datepicker__day-name {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 14px;\n    font-weight: 500;\n    line-height: calc(18 / 14);\n    text-transform: uppercase;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n      line-height: calc(24 / 18);\n    }\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .react-datepicker__day {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    padding: 1px;\n\n    border-radius: 50%;\n\n    font-size: 12px;\n    font-weight: 400;\n    line-height: calc(16 / 12);\n    color: #fff;\n\n    @media screen and (min-width: 375px) {\n      font-size: 14px;\n      line-height: calc(18 / 14);\n    }\n\n    @media screen and (min-width: 768px) {\n      padding: 12px 22px;\n      font-size: 18px;\n      line-height: calc(24 / 18);\n    }\n  }\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 0.4);\n  }\n\n  .react-datepicker__day--selected {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    padding: 3px 3px;\n\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 1);\n    color: #3e85f3;\n    outline: #fff;\n\n    @media screen and (min-width: 768px) {\n      padding: 12px 20px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    margin-top: 26px;\n    margin-right: 18px;\n    font-weight: 400;\n    width: 15px;\n    height: 15px;\n    border: none;\n    color: #fff;\n  }\n\n  .react-datepicker__navigation--previous {\n    margin-top: 26px;\n    margin-left: 18px;\n    font-weight: 400;\n    width: 15px;\n    height: 15px;\n    border: none;\n  }\n\n  .react-datepicker-wrapper {\n    width: 100%;\n  }\n\n  .react-datepicker__input-container {\n    cursor: pointer;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { DatePickerWrapper } from './DatePickerComponent.styled';\n\nimport { registerLocale } from 'react-datepicker';\nimport en from 'date-fns/locale/en-GB';\n\nregisterLocale('en', { ...en, options: { weekStartsOn: 1 } });\n\nconst DatePickerComponent = ({ startDate, setStartDate, customInput }) => {\n  const customDayNameOfWeek = () => {\n    const dayNameElements = document.querySelectorAll(\n      '.react-datepicker__day-name'\n    );\n    const dayNames = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n    return dayNameElements?.forEach((dayElement, index) => {\n      dayElement.textContent = dayNames[index];\n    });\n  };\n  return (\n    <DatePickerWrapper>\n      <DatePicker\n        dateFormat=\"dd MMMM yyyy\"\n        selected={startDate}\n        onChange={date => {\n          setStartDate(date);\n        }}\n        customInput={customInput}\n        locale=\"en\"\n        weekDayClassName={customDayNameOfWeek}\n      />\n    </DatePickerWrapper>\n  );\n};\n\nexport default DatePickerComponent;\n","import { styled } from 'styled-components';\n\nexport const Period = styled.div`\n  text-align: center;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: calc(18 / 14);\n  text-transform: uppercase;\n  border-radius: 8px;\n  padding: 6px 12px;\n  background-color: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  color: #fff;\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 12px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  LabelList,\n  BarChart,\n  ResponsiveContainer,\n} from 'recharts';\nimport { selectTheme } from 'redux/user/selectors';\nimport { darkTheme, lightTheme } from 'utils/theme';\n\nexport default function StatisticsChart({\n  filteredTasksByDate,\n  filteredTasksByMonth,\n}) {\n  const allTasksByDay = filteredTasksByDate?.length;\n\n  const allTasksByMonth = filteredTasksByMonth?.length;\n\n  const toDoByDayPercent =\n    (filteredTasksByDate?.filter(task => task?.category === 'to-do').length /\n      allTasksByDay) *\n    100;\n\n  const inProgressByDayPercent =\n    (filteredTasksByDate?.filter(task => task?.category === 'in-progress')\n      .length /\n      allTasksByDay) *\n    100;\n\n  const doneByDayPercent =\n    (filteredTasksByDate?.filter(task => task?.category === 'done').length /\n      allTasksByDay) *\n    100;\n\n  const toDoByMonthPercent =\n    (filteredTasksByMonth?.filter(task => task?.category === 'to-do').length /\n      allTasksByMonth) *\n    100;\n\n  const inProgressByMonthPercent =\n    (filteredTasksByMonth?.filter(task => task?.category === 'in-progress')\n      .length /\n      allTasksByMonth) *\n    100;\n\n  const doneByMonthPercent =\n    (filteredTasksByMonth?.filter(task => task?.category === 'done').length /\n      allTasksByMonth) *\n    100;\n  const maxByDayOffset =\n    Math.max(toDoByDayPercent, inProgressByDayPercent, doneByDayPercent) /\n      100 || 0;\n\n  const maxByMonthOffset =\n    Math.max(toDoByMonthPercent, inProgressByMonthPercent, doneByMonthPercent) /\n      100 || 0;\n\n  const data = useMemo(\n    () => [\n      {\n        name: 'To Do',\n        byDay: Math.ceil(toDoByDayPercent),\n        byMonth: Math.ceil(toDoByMonthPercent),\n      },\n      {\n        name: 'In Progress',\n        byDay: Math.ceil(inProgressByDayPercent),\n        byMonth: Math.ceil(inProgressByMonthPercent),\n      },\n      {\n        name: 'Done',\n        byDay: Math.ceil(doneByDayPercent),\n        byMonth: Math.ceil(doneByMonthPercent),\n      },\n    ],\n    [\n      toDoByMonthPercent,\n      inProgressByMonthPercent,\n      doneByMonthPercent,\n      toDoByDayPercent,\n      inProgressByDayPercent,\n      doneByDayPercent,\n    ]\n  );\n\n  const theme = useSelector(selectTheme);\n  const themeSwitch = theme === 'light' ? lightTheme : darkTheme;\n\n  const colors = {\n    category: themeSwitch.colors.statisticsPage.mainText,\n    line: themeSwitch.colors.statisticsPage.colorLine,\n  };\n\n  const sizes = {\n    mobile: {\n      gap: 8,\n      fontSizeCategory: 12,\n      fontSizeLabel: 12,\n      lineHeight: 1.33,\n      labelLineHeight: 1.33,\n      barSize: 22,\n    },\n    laptop: {\n      gap: 14,\n      fontSizeCategory: 14,\n      fontSizeLabel: 16,\n      lineHeight: 1.5,\n      labelLineHeight: 1.13,\n      barSize: 27,\n    },\n    desktop: {\n      gap: 14,\n      fontSizeCategory: 14,\n      fontSizeLabel: 16,\n      lineHeight: 1.5,\n      labelLineHeight: 1.13,\n      barSize: 27,\n    },\n  };\n\n  const currentWidth = window.innerWidth;\n  const viewport =\n    currentWidth < 768 ? 'mobile' : currentWidth < 1440 ? 'laptop' : 'desktop';\n\n  const percentages = [0, 20, 40, 60, 80, 100];\n\n  const customFormatter = value => (!value ? '' : `${value}%`);\n\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" minHeight={440}>\n        <BarChart\n          data={data}\n          barGap={sizes[viewport].gap}\n          margin={{\n            top: 20,\n          }}\n        >\n          <defs>\n            <linearGradient\n              id=\"paint0_linear_10525_1738\"\n              x1=\"11.4074\"\n              y1=\"410\"\n              x2=\"11.4074\"\n              y2=\"2\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#FFD2DD\" />\n              <stop\n                offset={maxByDayOffset}\n                stopColor=\"#FFD2DD\"\n                stopOpacity=\"0.1\"\n              />\n            </linearGradient>\n            <linearGradient\n              id=\"paint0_linear_10525_1741\"\n              x1=\"11.4074\"\n              y1=\"410\"\n              x2=\"11.4074\"\n              y2=\"2\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#3E85F3\" />\n              <stop\n                offset={maxByMonthOffset}\n                stopColor=\"#3E85F3\"\n                stopOpacity=\"0.1\"\n              />\n            </linearGradient>\n          </defs>\n          <CartesianGrid stroke={colors.line} vertical={false} />\n          <XAxis\n            axisLine={{ stroke: 'transparent' }}\n            dataKey=\"name\"\n            tickLine={false}\n            stroke=\"transparent\"\n            tick={props => (\n              <text\n                x={props.x}\n                y={props.y}\n                dy={16}\n                textAnchor=\"middle\"\n                fill={colors.category}\n                fontFamily=\"Inter\"\n                fontSize={sizes[viewport].fontSizeCategory}\n                fontWeight={400}\n                style={{ lineHeight: sizes[viewport].lineHeight }}\n              >\n                {props.payload.value}\n              </text>\n            )}\n          />\n          <YAxis\n            tickCount={6}\n            ticks={percentages}\n            axisLine={{ stroke: 'transparent' }}\n            tickLine={{ stroke: 'transparent' }}\n            tickSize={32}\n            tick={props => (\n              <text\n                x={props.x}\n                y={props.y}\n                dy={3}\n                dx={-10}\n                textAnchor=\"middle\"\n                fill={colors.category}\n                fontFamily=\"Inter\"\n                fontSize={14}\n                fontWeight={400}\n                style={{ lineHeight: 1.5 }}\n              >\n                {props.payload.value}\n              </text>\n            )}\n          />\n          <Bar\n            dataKey=\"byDay\"\n            fill=\"url(#paint0_linear_10525_1738)\"\n            radius={[0, 0, 7, 7]}\n            barSize={sizes[viewport].barSize}\n          >\n            <LabelList\n              dataKey=\"byDay\"\n              position=\"top\"\n              fontFamily=\"Poppins\"\n              fill={colors.category}\n              fontSize={sizes[viewport].fontSizeLabel}\n              fontWeight={500}\n              formatter={customFormatter}\n              style={{ lineHeight: sizes[viewport].labelLineHeight }}\n            />\n          </Bar>\n          <Bar\n            dataKey=\"byMonth\"\n            fill=\"url(#paint0_linear_10525_1741)\"\n            barSize={sizes[viewport].barSize}\n            radius={[0, 0, 7, 7]}\n          >\n            <LabelList\n              dataKey=\"byMonth\"\n              position={'top'}\n              fill={colors.category}\n              fontFamily=\"Poppins\"\n              fontSize={sizes[viewport].fontSizeLabel}\n              fontWeight={500}\n              formatter={customFormatter}\n              style={{ lineHeight: sizes[viewport].labelLineHeight }}\n            />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n}\n","const { forwardRef } = require('react');\nconst { Period } = require('./DatePickerStatisticsInput.styled');\n\nexport const DatePickerStatisticsInput = forwardRef(\n  ({ value, onClick }, ref) => (\n    <Period onClick={onClick} ref={ref}>\n      {value}\n    </Period>\n  )\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 20px;\n\n  @media (min-width: ${p => p.theme.media.m}) {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    margin-bottom: 40px;\n  }\n\n  @media (min-width: ${p => p.theme.media.l}) {\n    justify-content: space-between;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`;\n\nexport const PaginatorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 26px;\n\n  @media (min-width: ${p => p.theme.media.m}) {\n    gap: 8px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const List = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ColoredSquare = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n\nexport const CategoryText = styled.p`\n  color: ${props => {\n    return props.theme.colors.statisticsPage.mainText;\n  }};\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.29;\n\n  @media (min-width: ${p => p.theme.media.m}) {\n    font-size: 16px;\n    line-height: 1.13;\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n`;\n\nexport const Icon = styled.svg`\n  display: inline-block;\n  height: 18px;\n  width: 18px;\n  stroke-width: 0;\n  stroke: ${props => props.theme.colors.statisticsPage.colorIcon};\n  fill: transparent;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const PaginatorBtn = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 30px;\n  padding: 7px 10px;\n  font-weight: 700;\n  border-radius: ${p => (p.$isPrevBtn ? '8px 0px 0px 8px' : '0px 8px 8px 0px')};\n  border: 1px solid ${props => props.theme.colors.statisticsPage.todayBorder};\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px ${props => props.theme.colors.button.shadow};\n    ${Icon} {\n      stroke: ${props => props.theme.colors.statisticsPage.hoverIcon};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n    height: 34px;\n  }\n`;\n","import sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport DatePickerComponent from 'components/DatePickerComponent/DatePickerComponent';\nimport { DatePickerStatisticsInput } from 'components/DatePickerStatisticsInput/DatePickerStatisticsInput';\nimport {\n  PaginatorWrapper,\n  ButtonsWrap,\n  Wrapper,\n  CategoryText,\n  PaginatorBtn,\n} from './StatisticPaginator.styled';\nimport {\n  List,\n  ListItem,\n  ColoredSquare,\n  Icon,\n} from './StatisticPaginator.styled';\nimport { parseISO } from 'date-fns';\nimport moment from 'moment';\n\nexport default function StatisticPaginator({ selectedDate, setSelectedDate }) {\n  const prevHandler = () => {\n    setSelectedDate(prev => prev.clone().subtract(1, 'day'));\n  };\n\n  const nextHandler = () => {\n    setSelectedDate(prev => prev.clone().add(1, 'day'));\n  };\n\n  return (\n    <Wrapper>\n      <PaginatorWrapper>\n        <DatePickerComponent\n          startDate={parseISO(selectedDate)}\n          setStartDate={date => setSelectedDate(moment(date))}\n          customInput={<DatePickerStatisticsInput />}\n        />\n\n        <ButtonsWrap>\n          <PaginatorBtn onClick={prevHandler} $isPrevBtn>\n            <Icon>\n              <use href={sprite + '#icon-chevron-left'}></use>\n            </Icon>\n          </PaginatorBtn>\n          <PaginatorBtn onClick={nextHandler}>\n            <Icon>\n              <use href={sprite + '#icon-chevron-right'}></use>\n            </Icon>\n          </PaginatorBtn>\n        </ButtonsWrap>\n      </PaginatorWrapper>\n      <List>\n        <ListItem>\n          <ColoredSquare color=\"#FFD2DD\"></ColoredSquare>\n          <CategoryText fontFamily=\"Inter\">By Day</CategoryText>\n        </ListItem>\n        <ListItem>\n          <ColoredSquare color=\" #3E85F3;\"></ColoredSquare>\n          <CategoryText fontFamily=\"Poppins\">By Month</CategoryText>\n        </ListItem>\n      </List>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StatisticsWrapper = styled.div`\n  width: 100%;\n  height: 684px;\n  padding: 28px 14px 135px 14px;\n  border-radius: 16px;\n  background: ${props => props.theme.colors.statisticsPage.mainBg};\n  @media (min-width: ${p => p.theme.media.m}) {\n    height: 854px;\n    padding-top: 132px;\n    padding-bottom: 224px;\n  }\n  @media (min-width: ${p => p.theme.media.l}) {\n    max-height: 752px;\n    padding: 75px 114px 104px 113px;\n  }\n`;\n\nexport const ChartWrapper = styled.div`\n  min-height: 413px;\n  margin: 0 auto;\n  padding: 14px;\n  border: 0.8px solid\n    ${props => props.theme.colors.statisticsPage.statisticsBorder};\n  border-radius: 29px;\n  @media (min-width: ${p => p.theme.media.m}) {\n    min-height: 424px;\n    padding: 32px;\n  }\n  @media (min-width: ${p => p.theme.media.l}) {\n    min-height: 440px;\n    padding: 40px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(21 / 14);\n  color: ${props => props.theme.colors.statisticsPage.mainText};\n  @media (min-width: ${p => p.theme.media.m}) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFilteredTasksByDateStat,\n  selectTasks,\n  selectFilteredTasksByMonth,\n} from 'redux/tasks/tasksSelectors';\nimport { getAllTasks } from 'redux/tasks/tasksOperations';\nimport StatisticsChart from '../../components/StatisticsChart/StatisticsChart';\nimport StatisticPaginator from 'components/StatisticPaginator/StatisticPaginator';\nimport { StatisticsWrapper, ChartWrapper, Text } from './Statistics.styled';\nimport moment from 'moment';\n\nexport default function Statistics() {\n  const tasks = useSelector(selectTasks);\n\n  const dispatch = useDispatch();\n\n  const [selectedDate, setSelectedDate] = useState(moment());\n\n  const selectedDateFormat = selectedDate.format('YYYY-MM-DD');\n\n  const filteredTasksByDate = selectFilteredTasksByDateStat(\n    tasks,\n    selectedDateFormat\n  );\n\n  const filteredTasksByMonth = selectFilteredTasksByMonth(\n    tasks,\n    selectedDateFormat\n  );\n\n  useEffect(() => {\n    dispatch(getAllTasks());\n  }, [dispatch, selectedDate]);\n\n  return (\n    <StatisticsWrapper>\n      <StatisticPaginator\n        selectedDate={selectedDateFormat}\n        setSelectedDate={setSelectedDate}\n      />\n      <ChartWrapper>\n        <Text>Tasks</Text>\n        <StatisticsChart\n          filteredTasksByDate={filteredTasksByDate}\n          filteredTasksByMonth={filteredTasksByMonth}\n        />\n      </ChartWrapper>\n    </StatisticsWrapper>\n  );\n}\n"],"names":["DatePickerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","registerLocale","_objectSpread","en","options","weekStartsOn","_ref","startDate","setStartDate","customInput","_jsx","children","DatePicker","dateFormat","selected","onChange","date","locale","weekDayClassName","dayNameElements","document","querySelectorAll","dayNames","forEach","dayElement","index","textContent","Period","StatisticsChart","filteredTasksByDate","filteredTasksByMonth","allTasksByDay","length","allTasksByMonth","toDoByDayPercent","filter","task","category","inProgressByDayPercent","doneByDayPercent","toDoByMonthPercent","inProgressByMonthPercent","doneByMonthPercent","maxByDayOffset","Math","max","maxByMonthOffset","data","useMemo","name","byDay","ceil","byMonth","themeSwitch","useSelector","selectTheme","lightTheme","darkTheme","colors","statisticsPage","mainText","line","colorLine","sizes","mobile","gap","fontSizeCategory","fontSizeLabel","lineHeight","labelLineHeight","barSize","laptop","desktop","currentWidth","window","innerWidth","viewport","customFormatter","value","concat","_Fragment","ResponsiveContainer","width","minHeight","_jsxs","BarChart","barGap","margin","top","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","CartesianGrid","stroke","vertical","XAxis","axisLine","dataKey","tickLine","tick","props","x","y","dy","textAnchor","fill","fontFamily","fontSize","fontWeight","style","payload","YAxis","tickCount","ticks","tickSize","dx","Bar","radius","LabelList","position","formatter","forwardRef","require","DatePickerStatisticsInput","ref","onClick","Wrapper","p","theme","media","m","l","PaginatorWrapper","_templateObject2","List","_templateObject3","ListItem","li","_templateObject4","ColoredSquare","_templateObject5","color","CategoryText","_templateObject6","ButtonsWrap","_templateObject7","Icon","svg","_templateObject8","colorIcon","PaginatorBtn","button","_templateObject9","$isPrevBtn","todayBorder","shadow","hoverIcon","StatisticPaginator","selectedDate","setSelectedDate","DatePickerComponent","parseISO","moment","prev","clone","subtract","href","sprite","add","StatisticsWrapper","mainBg","ChartWrapper","statisticsBorder","Text","Statistics","tasks","selectTasks","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","selectedDateFormat","format","selectFilteredTasksByDateStat","selectFilteredTasksByMonth","useEffect","getAllTasks"],"sourceRoot":""}