{"version":3,"file":"static/js/56.05013c8a.chunk.js","mappings":"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","sources":["components/PeriodPaginator/PeriodPaginator.styled.jsx","components/PeriodPaginator/PeriodPaginator.jsx","components/PeriodTypeSelect/PeriodTypeSelect.styled.jsx","components/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.jsx","components/CalendarToolbar/CalendarToolbar.jsx","pages/Calendar.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PaginatorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n    width: 100%;\n    gap: 8px;\n  }\n`;\n\nexport const Period = styled.div`\n  text-align: center;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: calc(18 / 14);\n  text-transform: uppercase;\n  border-radius: 8px;\n  width: 150px;\n  padding: 6px 12px;\n  background-color: ${props => props.theme.colors.calendarPage.todayBg};\n  box-shadow: 4px 2px 16px 0px ${props => props.theme.colors.button.shadow};\n  color: ${props => props.theme.colors.calendarPage.todayText};\n\n  @media screen and (min-width: 768px) {\n    width: 170px;\n    padding: 8px 12px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n\nexport const PaginatorBtn = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 36px;\n  height: 30px;\n  padding: 7px 10px;\n  font-weight: 700;\n  border-radius: ${p => (p.$isPrevBtn ? '8px 0px 0px 8px' : '0px 8px 8px 0px')};\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\n  color: ${props =>\n    props.disabled\n      ? props.theme.colors.calendarPage.periodPaginatorDisabled\n      : props.theme.colors.calendarPage.paginatorActive};\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px ${props => props.theme.colors.button.shadow};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  display: inline-block;\n  height: 18px;\n  width: 18px;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: transparent;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import {\n  Icon,\n  PaginatorBtn,\n  PaginatorWrapper,\n  Period,\n} from './PeriodPaginator.styled';\nimport sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { updateDate } from 'redux/date/slice';\n\nexport default function PeriodPaginator({ changePeriod, momentDate, setMomentDate }) {\n  const dispatch = useDispatch();\n\n  const checkDaysOfWeek = momentDate.format('ddd');\n\n  useEffect(() => {\n    dispatch(updateDate(momentDate.format('YYYY-MM-DD')));\n  }, [dispatch, momentDate]);\n\n  const prevMonthHandler = async () => {\n    if (changePeriod === 'month') {\n      setMomentDate(prev => prev.clone().subtract(1, 'month'));\n      return;\n    }\n\n    if (changePeriod === 'day') {\n      setMomentDate(prev => prev.clone().subtract(1, 'day'));\n      return;\n    }\n  };\n\n  const nextMonthHandler = () => {\n    if (changePeriod === 'month') {\n      setMomentDate(prev => prev.clone().add(1, 'month'));\n      return;\n    }\n\n    if (changePeriod === 'day') {\n      setMomentDate(prev => prev.clone().add(1, 'day'));\n      return;\n    }\n  };\n\n  return (\n    <PaginatorWrapper>\n      <Period>\n        {changePeriod === 'day'\n          ? momentDate.format('DD MMM YYYY')\n          : momentDate.format('MMMM YYYY')}\n      </Period>\n      <div>\n        <PaginatorBtn\n          $isPrevBtn\n          disabled={changePeriod === 'day' && checkDaysOfWeek === 'Mon'}\n          onClick={prevMonthHandler}\n        >\n          <Icon>\n            <use href={sprite + '#icon-chevron-left'}></use>\n          </Icon>\n        </PaginatorBtn>\n        <PaginatorBtn\n          disabled={changePeriod === 'day' && checkDaysOfWeek === 'Sun'}\n          onClick={nextMonthHandler}\n        >\n          <Icon>\n            <use href={sprite + '#icon-chevron-right'}></use>\n          </Icon>\n        </PaginatorBtn>\n      </div>\n    </PaginatorWrapper>\n  );\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BtnWrapper = styled.div`\n  padding-top: 8px;\n  padding-bottom: 8px;\n`;\n\nexport const PeriodTypeBtn = styled(NavLink)`\n  padding: ${p => (p.$isMonth ? '8px 16px' : '8px 25px')};\n  width: 76px;\n  height: 34px;\n\n  font-size: 14px;\n  font-weight: 500;\n  text-align: center;\n  line-height: calc(18 / 14);\n\n  border: 1px solid rgba(62, 133, 243, 0.2);\n  border-radius: ${p => (p.$isMonth ? '8px 0px 0px 8px' : '0px 8px 8px 0px')};\n\n  background-color: ${props => props.theme.colors.calendarPage.periodTogglerBg};\n  color: ${props => props.theme.colors.calendarPage.periodTogglerText};\n\n  transition:\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover {\n    color: ${props => props.theme.colors.calendarPage.periodTogglerActiveText};\n    background-color: ${props =>\n      props.theme.colors.calendarPage.periodTogglerActiveBg};\n    box-shadow: 0px 1px 7px 1px rgba(0, 0, 0, 0.1);\n  }\n\n  &.active {\n    color: ${p => {\n      switch (p.type) {\n        case 'month':\n          return p.theme.colors.calendarPage.periodTogglerActiveText;\n        case 'day':\n          return p.theme.colors.calendarPage.periodTogglerActiveText;\n        default:\n          return;\n      }\n    }};\n    background-color: ${p => {\n      switch (p.type) {\n        case 'month':\n          return p.theme.colors.calendarPage.periodTogglerActiveBg;\n        case 'day':\n          return p.theme.colors.calendarPage.periodTogglerActiveBg;\n        default:\n          return;\n      }\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: ${p => (p.$isMonth ? '8px 16px' : '8px 26px')};\n    width: 82px;\n    height: 34px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n\n// ADD DARK & LIGHT THEME\n","import moment from 'moment';\nimport { BtnWrapper, PeriodTypeBtn } from './PeriodTypeSelect.styled';\n\nconst PeriodTypeSelect = () => {\n  return (\n    <BtnWrapper>\n      <PeriodTypeBtn\n        $activeClassName=\"active\"\n        type=\"month\"\n        $isMonth\n        to={`month/${moment().format('YYYY-MM-DD')}`}\n      >\n        Month\n      </PeriodTypeBtn>\n      <PeriodTypeBtn\n        $activeClassName=\"active\"\n        type=\"day\"\n        to={`day/${moment().format('YYYY-MM-DD')}`}\n      >\n        Day\n      </PeriodTypeBtn>\n    </BtnWrapper>\n  );\n};\n\nexport default PeriodTypeSelect;\n","import styled from 'styled-components';\n\nexport const CalendarToolBarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  width: 100%;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 32px;\n  }\n`;\n","import PeriodPaginator from '../PeriodPaginator/PeriodPaginator';\nimport PeriodTypeSelect from '../PeriodTypeSelect/PeriodTypeSelect';\nimport { CalendarToolBarWrapper } from './CalendarToolbar.styled';\n\nconst CalendarToolbar = ({ changePeriod, momentDate, setMomentDate }) => {\n  \n  return (\n    <CalendarToolBarWrapper>\n      <PeriodPaginator changePeriod={changePeriod} momentDate={momentDate} setMomentDate={setMomentDate} />\n      <PeriodTypeSelect />\n    </CalendarToolBarWrapper>\n  );\n};\n\nexport default CalendarToolbar;\n","import moment from 'moment';\nimport CalendarToolbar from '../components/CalendarToolbar/CalendarToolbar';\n\nimport { Suspense, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectDate } from 'redux/date/selectors';\n\nexport default function Calendar() {\n  moment.updateLocale('en', { week: { dow: 1 } });\n\n  const date = useSelector(selectDate);\n  const [momentDate, setMomentDate] = useState(moment(date));\n  const [changePeriod, setChangePeriod] = useState('month');\n\n  return (\n    <>\n      <CalendarToolbar changePeriod={changePeriod} momentDate={momentDate} setMomentDate={setMomentDate} />\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet context={[setChangePeriod, setMomentDate]} />\n      </Suspense>\n    </>\n  );\n};"],"names":["PaginatorWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Period","_templateObject2","props","theme","colors","calendarPage","todayBg","button","shadow","todayText","PaginatorBtn","_templateObject3","p","$isPrevBtn","border","mainBg","disabled","periodPaginatorDisabled","paginatorActive","Icon","svg","_templateObject4","PeriodPaginator","_ref","changePeriod","momentDate","setMomentDate","dispatch","useDispatch","checkDaysOfWeek","format","useEffect","updateDate","prevMonthHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","clone","subtract","abrupt","stop","apply","arguments","_jsxs","children","_jsx","onClick","href","sprite","add","BtnWrapper","PeriodTypeBtn","NavLink","$isMonth","periodTogglerBg","periodTogglerText","periodTogglerActiveText","periodTogglerActiveBg","type","$activeClassName","to","concat","moment","CalendarToolBarWrapper","PeriodTypeSelect","Calendar","week","dow","date","useSelector","selectDate","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setChangePeriod","_Fragment","CalendarToolbar","Suspense","fallback","Outlet","context"],"sourceRoot":""}