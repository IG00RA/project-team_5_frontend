{"version":3,"file":"static/js/56.e176f18f.chunk.js","mappings":"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","sources":["components/PeriodPaginator/PeriodPaginator.styled.jsx","components/PeriodPaginator/PeriodPaginator.jsx","components/PeriodTypeSelect/PeriodTypeSelect.styled.jsx","components/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.jsx","components/CalendarToolbar/CalendarToolbar.jsx","pages/Calendar.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PaginatorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n    width: 100%;\n    gap: 8px;\n  }\n`;\n\nexport const Period = styled.div`\n  text-align: center;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: calc(18 / 14);\n  text-transform: uppercase;\n  border-radius: 8px;\n  width: 150px;\n  padding: 6px 12px;\n  background-color: ${props => props.theme.colors.calendarPage.todayBg};\n  box-shadow: 4px 2px 16px 0px ${props => props.theme.colors.button.shadow};\n  color: ${props => props.theme.colors.calendarPage.todayText};\n\n  @media screen and (min-width: 768px) {\n    width: 170px;\n    padding: 8px 12px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n\nexport const PaginatorBtn = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 36px;\n  height: 30px;\n  padding: 7px 10px;\n  font-weight: 700;\n  border-radius: ${p => (p.$isPrevBtn ? '8px 0px 0px 8px' : '0px 8px 8px 0px')};\n  border: 1px solid ${props => props.theme.colors.calendarPage.border};\n  background-color: ${props => props.theme.colors.calendarPage.mainBg};\n  color: ${props =>\n    props.disabled\n      ? props.theme.colors.calendarPage.periodPaginatorDisabled\n      : props.theme.colors.calendarPage.paginatorActive};\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px ${props => props.theme.colors.button.shadow};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  display: inline-block;\n  height: 18px;\n  width: 18px;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: transparent;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import {\n  Icon,\n  PaginatorBtn,\n  PaginatorWrapper,\n  Period,\n} from './PeriodPaginator.styled';\nimport sprite from '../../images/svg-sprite/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { updateDate } from 'redux/date/slice';\nimport moment from 'moment';\nimport i18next from 'i18next';\n\nexport default function PeriodPaginator({\n  changePeriod,\n  momentDate,\n  setMomentDate,\n}) {\n  const currentLang = i18next.language;\n  const dispatch = useDispatch();\n  const checkDaysOfWeek = momentDate.format('ddd');\n\n  useEffect(() => {\n    dispatch(updateDate(momentDate.format('YYYY-MM-DD')));\n  }, [dispatch, momentDate]);\n\n  useEffect(() => {\n    setMomentDate(prev => moment(prev).locale(currentLang));\n  }, [currentLang, setMomentDate]);\n\n  const prevMonthHandler = async () => {\n    if (changePeriod === 'month') {\n      setMomentDate(prev => prev.clone().subtract(1, 'month'));\n      return;\n    }\n\n    if (changePeriod === 'day') {\n      setMomentDate(prev => prev.clone().subtract(1, 'day'));\n      return;\n    }\n  };\n\n  const nextMonthHandler = () => {\n    if (changePeriod === 'month') {\n      setMomentDate(prev => prev.clone().add(1, 'month'));\n      return;\n    }\n\n    if (changePeriod === 'day') {\n      setMomentDate(prev => prev.clone().add(1, 'day'));\n      return;\n    }\n  };\n\n  return (\n    <PaginatorWrapper>\n      <Period>\n        {changePeriod === 'day'\n          ? momentDate.format('DD MMM YYYY')\n          : momentDate.format('MMMM YYYY')}\n      </Period>\n      <div>\n        <PaginatorBtn\n          $isPrevBtn\n          disabled={\n            changePeriod === 'day' &&\n            (checkDaysOfWeek === 'Mon' || checkDaysOfWeek === 'пн')\n          }\n          onClick={prevMonthHandler}\n        >\n          <Icon>\n            <use href={sprite + '#icon-chevron-left'}></use>\n          </Icon>\n        </PaginatorBtn>\n        <PaginatorBtn\n          disabled={\n            changePeriod === 'day' &&\n            (checkDaysOfWeek === 'Sun' || checkDaysOfWeek === 'нд')\n          }\n          onClick={nextMonthHandler}\n        >\n          <Icon>\n            <use href={sprite + '#icon-chevron-right'}></use>\n          </Icon>\n        </PaginatorBtn>\n      </div>\n    </PaginatorWrapper>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BtnWrapper = styled.div`\n  padding-top: 8px;\n  padding-bottom: 8px;\n`;\n\nexport const PeriodTypeBtn = styled(NavLink)`\n  padding: ${p => (p.$isMonth ? '8px 16px' : '8px 25px')};\n  width: 76px;\n  height: 34px;\n\n  font-size: 14px;\n  font-weight: 500;\n  text-align: center;\n  line-height: calc(18 / 14);\n\n  border: 1px solid rgba(62, 133, 243, 0.2);\n  border-radius: ${p => (p.$isMonth ? '8px 0px 0px 8px' : '0px 8px 8px 0px')};\n\n  background-color: ${props => props.theme.colors.calendarPage.periodTogglerBg};\n  color: ${props => props.theme.colors.calendarPage.periodTogglerText};\n\n  transition:\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover {\n    color: ${props => props.theme.colors.calendarPage.periodTogglerActiveText};\n    background-color: ${props =>\n      props.theme.colors.calendarPage.periodTogglerActiveBg};\n    box-shadow: 0px 1px 7px 1px rgba(0, 0, 0, 0.1);\n  }\n\n  &.active {\n    color: ${p => {\n      switch (p.type) {\n        case 'month':\n          return p.theme.colors.calendarPage.periodTogglerActiveText;\n        case 'day':\n          return p.theme.colors.calendarPage.periodTogglerActiveText;\n        default:\n          return;\n      }\n    }};\n    background-color: ${p => {\n      switch (p.type) {\n        case 'month':\n          return p.theme.colors.calendarPage.periodTogglerActiveBg;\n        case 'day':\n          return p.theme.colors.calendarPage.periodTogglerActiveBg;\n        default:\n          return;\n      }\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: ${p => (p.$isMonth ? '8px 16px' : '8px 26px')};\n    width: 82px;\n    height: 34px;\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n`;\n","import moment from 'moment';\nimport { BtnWrapper, PeriodTypeBtn } from './PeriodTypeSelect.styled';\nimport { useTranslation } from 'react-i18next';\n\nconst PeriodTypeSelect = () => {\n  const { t } = useTranslation();\n  return (\n    <BtnWrapper>\n      <PeriodTypeBtn\n        $activeClassName=\"active\"\n        type=\"month\"\n        $isMonth\n        to={`month/${moment().format('YYYY-MM-DD')}`}\n      >\n        {t('calendar.month')}\n      </PeriodTypeBtn>\n      <PeriodTypeBtn\n        $activeClassName=\"active\"\n        type=\"day\"\n        to={`day/${moment().format('YYYY-MM-DD')}`}\n      >\n        {t('calendar.day')}\n      </PeriodTypeBtn>\n    </BtnWrapper>\n  );\n};\n\nexport default PeriodTypeSelect;\n","import styled from 'styled-components';\n\nexport const CalendarToolBarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  width: 100%;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 32px;\n  }\n`;\n","import PeriodPaginator from '../PeriodPaginator/PeriodPaginator';\nimport PeriodTypeSelect from '../PeriodTypeSelect/PeriodTypeSelect';\nimport { CalendarToolBarWrapper } from './CalendarToolbar.styled';\n\nconst CalendarToolbar = ({ changePeriod, momentDate, setMomentDate }) => {\n  return (\n    <CalendarToolBarWrapper>\n      <PeriodPaginator\n        changePeriod={changePeriod}\n        momentDate={momentDate}\n        setMomentDate={setMomentDate}\n      />\n      <PeriodTypeSelect />\n    </CalendarToolBarWrapper>\n  );\n};\n\nexport default CalendarToolbar;\n","import moment from 'moment';\nimport 'moment/min/locales';\nimport CalendarToolbar from '../components/CalendarToolbar/CalendarToolbar';\n\nimport { Suspense, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectDate } from 'redux/date/selectors';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nexport default function Calendar() {\n  const currentLang = i18next.language;\n  moment.updateLocale(currentLang, { week: { dow: 1 } });\n\n  const date = useSelector(selectDate);\n  const [momentDate, setMomentDate] = useState(moment(date));\n  const [changePeriod, setChangePeriod] = useState('month');\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <CalendarToolbar\n        changePeriod={changePeriod}\n        momentDate={momentDate}\n        setMomentDate={setMomentDate}\n      />\n      <Suspense fallback={<div>{t('calendar.loading')}</div>}>\n        <Outlet context={[setChangePeriod, setMomentDate]} />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["PaginatorWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Period","_templateObject2","props","theme","colors","calendarPage","todayBg","button","shadow","todayText","PaginatorBtn","_templateObject3","p","$isPrevBtn","border","mainBg","disabled","periodPaginatorDisabled","paginatorActive","Icon","svg","_templateObject4","PeriodPaginator","_ref","changePeriod","momentDate","setMomentDate","currentLang","i18next","language","dispatch","useDispatch","checkDaysOfWeek","format","useEffect","updateDate","prev","moment","locale","prevMonthHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","clone","subtract","abrupt","stop","apply","arguments","_jsxs","children","_jsx","onClick","href","sprite","add","BtnWrapper","PeriodTypeBtn","NavLink","$isMonth","periodTogglerBg","periodTogglerText","periodTogglerActiveText","periodTogglerActiveBg","type","t","useTranslation","$activeClassName","to","concat","CalendarToolBarWrapper","PeriodTypeSelect","Calendar","week","dow","date","useSelector","selectDate","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setChangePeriod","_Fragment","CalendarToolbar","Suspense","fallback","Outlet","context"],"sourceRoot":""}